var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdmProductsComponent.html",[0,0.019,1,0.645]],["body/components/AdmProductsComponent.html",[0,0.024,1,0.884,2,0.728,3,0.261,4,0.225,5,0.532,6,0.532,7,0.532,8,0.225,9,3.288,10,3.749,11,1.41,12,1.471,13,1.864,14,1.886,15,1.805,16,2.147,17,1.632,18,2.92,19,1.215,20,1.497,21,1.672,22,2.147,23,2.263,24,1.822,25,1.864,26,3.038,27,1.863,28,2.996,29,1.883,30,1.805,31,2.92,32,2.906,33,0.993,34,2.147,35,3.038,36,2.501,37,2.501,38,1.346,39,0.993,40,1.346,41,2.147,42,2.147,43,1.883,44,1.883,45,3.749,46,3.038,47,3.038,48,1.098,49,3.038,50,3.038,51,3.385,52,2.549,53,2.026,54,3.038,55,4.111,56,1.486,57,3.038,58,0.532,59,1.465,60,1.183,61,1.331,62,1.883,63,0.809,64,0.791,65,0.809,66,1.202,67,1.63,68,0.884,69,0.809,70,2.501,71,0.809,72,2.501,73,0.225,74,0.397,75,2.435,76,2.906,77,3.678,78,0.897,79,4.111,80,4.111,81,3.038,82,1.486,83,3.385,84,0.897,85,1.41,86,1.822,87,1.812,88,2.026,89,1.346,90,1.202,91,1.751,92,1.39,93,1.995,94,0.809,95,0.04,96,0.7,97,0.498,98,0.809,99,1.883,100,1.995,101,1.179,102,1.242,103,1.995,104,1.995,105,1.214,106,1.995,107,1.995,108,1.475,109,1.346,110,1.215,111,3.038,112,2.147,113,1.995,114,1.995,115,1.086,116,1.086,117,1.995,118,1.883,119,2.28,120,1.995,121,1.812,122,1.995,123,1.471,124,1.995,125,0.851,126,0.983,127,0.383,128,1.237,129,1.098,130,1.237,131,0.589,132,0.983,133,0.798,134,0.652,135,0.884,136,0.532,137,1.237,138,1.237,139,0.589,140,2.6,141,1.41,142,1.41,143,1.41,144,2.147,145,1.41,146,1.41,147,1.41,148,1.329,149,0.798,150,0.261,151,0.429,152,1.098,153,1.41,154,1.41,155,3.678,156,1.214,157,1.41,158,1.41,159,0.798,160,1.098,161,1.995,162,0.983,163,1.995,164,1.995,165,1.995,166,1.995,167,1.41,168,1.643,169,1.995,170,1.643,171,0.798,172,1.995,173,1.995,174,1.995,175,1.41,176,0.983,177,3.028,178,1.643,179,1.995,180,1.643,181,0.798,182,3.678,183,1.995,184,1.995,185,1.995,186,1.995,187,1.995,188,0.884,189,1.995,190,1.995,191,1.995,192,1.643,193,1.643,194,1.995,195,1.864,196,1.805,197,2.263,198,3.837,199,2.263,200,3.385,201,4.111,202,2.501,203,3.038,204,2.147,205,2.501,206,1.672,207,2.501,208,2.147,209,2.147,210,2.147,211,2.147,212,2.147,213,0.532,214,0.809,215,0.809,216,0.532,217,1.095,218,0.532,219,0.809,220,0.429,221,0.532,222,0.429,223,0.532,224,0.429,225,0.532,226,0.429,227,0.532,228,0.429,229,0.532,230,0.532,231,0.429,232,0.479,233,0.532,234,0.429,235,0.429,236,0.532,237,0.429,238,0.532,239,0.532,240,0.429,241,0.532,242,0.532,243,0.532,244,0.02,245,0.02]],["title/components/AdmUsersComponent.html",[0,0.019,220,0.645]],["body/components/AdmUsersComponent.html",[0,0.02,1,0.319,2,0.577,3,0.194,4,0.167,5,0.395,6,0.395,7,0.395,8,0.167,9,3.095,12,1.396,13,1.803,14,1.73,15,1.485,16,1.701,17,1.895,19,1.996,21,1.325,22,1.701,23,1.325,24,1.821,25,1.643,27,1.904,28,2.635,29,2.164,30,1.73,32,2.468,33,0.786,34,1.701,38,1.547,39,0.786,40,1.821,42,1.701,43,2.547,44,2.164,45,1.701,48,0.87,52,2.547,53,1.186,56,1.804,58,0.395,59,1.372,60,1.108,61,1.201,63,0.641,64,0.653,65,0.641,66,0.992,67,1.345,68,0.751,69,0.641,71,0.641,73,0.167,74,0.397,76,3.059,78,0.711,82,1.262,84,1.133,87,1.495,88,2.025,89,1.345,90,0.992,91,1.73,92,1.305,94,0.641,95,0.04,96,0.595,97,0.463,98,0.641,101,1.153,102,1.153,105,0.711,108,1.031,109,1.066,110,2.059,112,1.701,115,0.896,116,0.896,118,1.492,119,1.882,121,1.495,125,0.768,126,0.731,127,0.285,129,0.536,131,0.438,132,0.731,133,0.593,134,0.485,135,0.658,136,0.395,148,1.097,149,0.593,150,0.194,151,0.518,156,0.896,157,1.049,158,1.049,159,0.593,160,0.817,162,0.731,170,1.222,171,0.593,175,1.049,176,1.72,180,1.222,181,0.962,188,1.547,193,1.981,195,1.914,196,1.907,197,2.635,199,1.325,205,1.981,206,1.325,208,1.701,213,0.395,214,0.93,215,0.641,216,0.395,217,0.93,218,0.395,219,0.641,220,0.751,221,0.395,222,0.319,223,0.395,224,0.319,225,0.395,226,0.319,227,0.395,228,0.319,229,0.395,230,0.395,231,0.319,232,0.356,233,0.395,234,0.319,235,0.319,236,0.395,237,0.319,238,0.395,239,0.395,240,0.319,241,0.395,242,0.395,243,0.395,244,0.016,245,0.016,246,4.11,247,1.222,248,1.821,249,3.063,250,2.04,251,2.407,252,2.407,253,3.563,254,3.492,255,2.875,256,1.066,257,0.962,258,1.066,259,1.186,260,1.186,261,1.186,262,2.164,263,1.981,264,1.701,265,2.468,266,1.981,267,2.407,268,2.407,269,2.499,270,2.875,271,2.875,272,2.875,273,2.407,274,2.875,275,1.049,276,2.407,277,1.701,278,2.547,279,2.164,280,2.407,281,2.468,282,2.164,283,2.407,284,2.407,285,1.922,286,2.407,287,2.905,288,1.981,289,1.701,290,2.407,291,1.701,292,3.492,293,2.875,294,1.492,295,2.164,296,1.492,297,1.484,298,2.794,299,4.109,300,2.407,301,2.407,302,1.484,303,1.981,304,1.484,305,1.484,306,1.484,307,2.164,308,2.407,309,1.701,310,2.407,311,2.905,312,1.701,313,2.407,314,2.407,315,1.981,316,1.981,317,1.981,318,2.407,319,1.484,320,1.484,321,2.407,322,1.981,323,1.701,324,2.407,325,2.407,326,1.981,327,1.701,328,1.981,329,2.407,330,1.701,331,2.407,332,1.325,333,1.186,334,1.484,335,1.834,336,1.484,337,1.254,338,1.484,339,0.817,340,0.92,341,1.981,342,1.72,343,2.905,344,1.72,345,0.962,346,1.821,347,1.186,348,2.407,349,1.186,350,1.72,351,1.72,352,1.72,353,2.407,354,0.817,355,0.817,356,0.731,357,0.731,358,0.817,359,0.817,360,0.731,361,0.731,362,3.035,363,1.484,364,1.484,365,1.484,366,1.222,367,1.484,368,2.407,369,1.484,370,1.484,371,1.484,372,1.484,373,0.92,374,1.222,375,1.222,376,1.222,377,1.222,378,1.222,379,1.222,380,1.222,381,1.222,382,1.222,383,1.222,384,1.484,385,1.492,386,1.701,387,1.701,388,2.407,389,1.981,390,2.499,391,1.222,392,1.222,393,1.222,394,1.222,395,1.222,396,1.484,397,1.484,398,1.484,399,1.049,400,1.484,401,1.671,402,1.671,403,1.882,404,1.882,405,1.222,406,1.484,407,1.484,408,1.484,409,1.484,410,1.484,411,1.484,412,1.981,413,1.492,414,2.025,415,2.407,416,1.701,417,1.701,418,1.701,419,1.701,420,1.701,421,1.701,422,1.981,423,1.701]],["title/components/AppComponent.html",[0,0.019,222,0.645]],["body/components/AppComponent.html",[0,0.033,1,0.78,2,1.107,3,0.474,4,0.408,5,0.966,6,0.966,7,0.966,8,0.408,58,0.966,59,1.608,60,1.298,61,1.23,63,1.23,64,0.993,65,1.23,66,1.66,67,2.252,68,1.151,69,1.23,71,1.23,73,0.408,74,0.604,92,0.966,95,0.04,96,0.787,97,0.408,115,1.07,116,1.07,125,0.941,127,0.696,131,1.07,133,1.449,136,0.966,139,1.07,150,0.474,151,0.78,213,0.966,214,1.23,215,1.23,216,0.966,217,1.425,218,0.966,219,1.23,220,0.78,221,0.966,222,1.151,223,0.966,224,0.78,225,0.966,226,0.78,227,0.966,228,0.78,229,0.966,230,0.966,231,0.78,232,0.869,233,0.966,234,0.78,235,0.78,236,0.966,237,0.78,238,0.966,239,0.966,240,0.78,241,0.966,242,0.966,243,0.966,244,0.03,245,0.03,424,2.984,425,3.264,426,4.183,427,4.183,428,4.183,429,4.617,430,4.617,431,5.081,432,4.617,433,3.624,434,3.624]],["title/interfaces/Cart.html",[435,1.083,436,1.858]],["body/interfaces/Cart.html",[3,0.589,4,0.507,8,0.507,62,3.573,73,0.507,74,0.69,95,0.039,97,0.594,105,1.651,108,1.702,123,2.349,125,0.767,150,0.589,244,0.034,245,0.034,435,1.627,436,3.268,437,2.478,438,3.707]],["title/components/CartComponent.html",[0,0.019,224,0.645]],["body/components/CartComponent.html",[0,0.026,1,0.496,2,0.812,3,0.302,4,0.26,5,0.615,6,0.615,7,0.615,8,0.26,12,1.604,13,2.163,14,1.982,15,1.597,17,1.846,18,3.084,19,2.218,21,1.864,22,2.394,23,1.864,24,1.959,25,1.354,27,1.813,30,1.224,31,2.708,33,1.107,39,1.107,48,1.224,52,2.099,53,1.669,56,1.597,58,0.615,59,1.505,60,1.215,61,0.902,63,0.902,64,0.728,65,0.902,66,1.311,68,0.951,69,0.902,71,0.902,73,0.26,74,0.525,75,2.591,78,1,82,1.597,84,1.185,85,1.631,86,1.959,91,1.837,92,1.311,94,0.902,95,0.04,96,0.753,97,0.452,98,0.902,99,2.099,101,1.178,102,1.178,105,1.185,108,1.185,109,1.959,110,1.967,112,2.394,115,1,116,1,123,1.604,125,0.838,126,1.137,127,0.443,128,1.431,129,0.834,130,1.431,131,0.681,134,0.754,136,0.615,137,1.431,138,1.431,139,0.681,140,2.836,141,1.631,142,1.631,143,1.631,144,2.394,145,1.631,146,1.631,147,1.631,148,1.224,149,0.923,150,0.302,151,0.728,152,1.27,153,1.631,154,1.631,156,1,159,0.923,167,2.836,176,1.669,181,1.354,188,1.023,195,1.354,196,1.597,198,2.788,207,2.788,208,2.394,209,1.631,210,2.394,211,2.394,212,2.394,213,0.615,214,0.902,215,0.902,216,0.615,217,1.178,218,0.615,219,0.902,220,0.496,221,0.615,222,0.496,223,0.615,224,0.951,225,0.615,226,0.496,227,0.615,228,0.496,229,0.615,230,0.615,231,0.496,232,0.553,233,0.615,234,0.496,235,0.496,236,0.615,237,0.496,238,0.615,239,0.615,240,0.496,241,0.615,242,0.615,243,0.615,244,0.022,245,0.022,248,1.501,250,1.224,256,1.501,257,1.767,258,1.501,259,1.669,260,1.669,261,1.669,262,2.099,264,2.394,265,2.394,311,3.124,315,2.788,316,2.788,317,3.638,330,2.394,354,1.27,355,1.27,356,1.137,357,1.137,358,1.27,359,1.27,360,1.137,361,1.137,436,2.099,439,1.631,440,3.387,441,3.353,442,2.394,443,3.387,444,2.394,445,3.387,446,2.788,447,3.387,448,3.387,449,2.788,450,3.387,451,3.387,452,3.387,453,4.419,454,3.387,455,3.387,456,2.308,457,2.308,458,2.308,459,2.308,460,2.099,461,3.638,462,3.387,463,3.387,464,2.394,465,3.387,466,2.308,467,3.387,468,2.308,469,2.308,470,2.308,471,2.308,472,2.308,473,3.387,474,3.387,475,3.387,476,3.387]],["title/components/HomeComponent.html",[0,0.019,226,0.645]],["body/components/HomeComponent.html",[0,0.033,1,0.775,2,1.103,3,0.471,4,0.406,5,0.96,6,0.96,7,0.96,8,0.406,17,1.744,18,2.532,25,2.135,44,2.852,58,0.96,59,1.606,60,1.305,61,1.226,63,1.226,64,0.989,65,1.226,68,1.148,69,1.226,71,1.226,95,0.039,96,0.784,125,0.784,127,0.692,134,1.177,150,0.471,151,0.775,213,0.96,214,1.226,215,1.226,216,0.96,217,1.422,218,0.96,219,1.226,220,0.775,221,0.96,222,0.775,223,0.96,224,0.775,225,0.96,226,1.148,227,0.96,228,0.775,229,0.96,230,0.96,231,0.775,232,0.864,233,0.96,234,0.775,235,0.775,236,0.96,237,0.775,238,0.96,239,0.96,240,0.775,241,0.96,242,0.96,243,0.96,244,0.03,245,0.03,294,2.852,449,3.787,464,3.252,477,2.967,478,4.6,479,4.6,480,4.6,481,4.6,482,4.6,483,4.6,484,4.6,485,4.6,486,4.6,487,3.787,488,3.252,489,3.787,490,2.532,491,4.6,492,4.6,493,2.266,494,4.6,495,4.6]],["title/components/LoginComponent.html",[0,0.019,228,0.645]],["body/components/LoginComponent.html",[0,0.026,1,0.511,2,0.83,3,0.311,4,0.268,5,0.633,6,0.633,7,0.633,8,0.268,12,1.383,13,2.102,14,1.9,15,1.796,17,1.917,19,2.102,20,1.704,24,1.533,25,1.792,27,1.856,28,1.904,30,1.619,33,1.13,38,1.533,39,1.13,40,1.533,48,1.25,56,1.619,58,0.633,59,1.513,60,1.238,61,0.922,63,0.922,64,0.744,65,0.922,66,1.333,67,1.808,68,0.964,69,0.922,71,0.922,73,0.268,74,0.453,78,1.022,82,1.619,84,1.022,87,1.704,88,2.208,89,1.808,90,1.464,91,1.721,92,1.194,94,0.633,95,0.04,96,0.695,97,0.389,98,0.633,101,0.922,102,1.087,109,1.533,110,1.383,121,2.01,125,0.847,127,0.456,129,0.859,131,0.702,132,1.171,133,0.95,134,0.776,135,1.053,136,0.633,139,1.323,149,0.95,150,0.311,151,0.511,156,1.205,162,1.171,171,0.95,176,2.449,181,1.792,188,1.986,195,2.102,196,1.796,197,1.904,199,1.904,213,0.633,214,1.194,215,0.922,216,0.633,217,1.194,218,0.633,219,0.922,220,0.511,221,0.633,222,0.511,223,0.633,224,0.511,225,0.633,226,0.511,227,0.633,228,0.964,229,0.633,230,0.633,231,0.511,232,0.57,233,0.633,234,0.511,235,0.511,236,0.633,237,0.511,238,0.633,239,0.633,240,0.511,241,0.633,242,0.633,243,0.633,244,0.022,245,0.022,248,1.533,249,1.904,250,2.08,256,1.533,257,1.792,258,1.533,259,1.704,260,1.704,261,2.208,262,2.145,275,1.68,278,2.145,285,2.894,291,2.445,298,2.145,327,2.445,337,1.13,345,1.383,356,1.704,401,1.308,402,1.308,414,2.59,460,2.145,489,2.848,490,2.736,493,1.704,496,1.956,497,3.459,498,2.884,499,2.445,500,3.459,501,4.481,502,2.445,503,4.481,504,3.459,505,3.459,506,3.459,507,2.145,508,2.848,509,3.459,510,3.459,511,4.762,512,3.459,513,2.376,514,2.848,515,3.459,516,4.481,517,3.459,518,2.376,519,2.848,520,3.459,521,2.376,522,2.376,523,1.956,524,2.376,525,2.376,526,2.376,527,2.376,528,2.376,529,1.956,530,1.956,531,1.956,532,1.956,533,1.956,534,1.956,535,3.459]],["title/components/NavComponent.html",[0,0.019,68,0.645]],["body/components/NavComponent.html",[0,0.025,1,0.466,2,0.775,3,0.283,4,0.244,5,0.577,6,0.577,7,0.577,8,0.244,12,1.545,13,2.189,14,1.656,15,1.397,17,1.853,18,2.818,19,1.713,20,2.111,25,1.922,27,1.91,29,2.656,30,1.168,31,1.778,33,1.056,36,3.527,38,2.269,39,1.056,48,1.168,51,2.66,56,2.019,58,0.577,59,1.511,60,1.202,61,0.861,63,0.861,64,0.695,65,0.861,66,1.263,68,0.922,69,0.861,71,0.861,73,0.244,74,0.505,76,3.029,78,0.954,82,1.548,84,1.141,86,1.899,89,1.713,90,1.4,92,1.221,94,0.577,95,0.04,96,0.658,97,0.435,98,0.577,99,2.656,101,0.861,102,1.03,109,1.432,110,2.047,115,0.954,116,0.954,125,0.849,126,1.067,127,0.416,128,1.342,129,1.168,131,0.639,135,0.96,136,0.577,149,0.866,150,0.283,151,0.695,156,0.954,188,1.432,196,1.85,204,3.029,206,1.778,213,0.577,214,0.861,215,0.861,216,0.577,217,1.142,218,0.577,219,0.861,220,0.466,221,0.577,222,0.466,223,0.577,224,0.466,225,0.577,226,0.466,227,0.577,228,0.466,229,0.577,230,0.577,231,0.466,232,0.519,233,0.577,234,0.466,235,0.466,236,0.577,237,0.466,238,0.577,239,0.577,240,0.466,241,0.577,242,0.577,243,0.577,244,0.021,245,0.021,248,1.899,249,2.646,250,1.85,256,1.432,257,1.292,258,2.13,262,2.003,281,2.284,282,2.003,285,2.359,296,1.342,307,2.003,309,3.029,312,2.284,335,1.548,337,1.571,339,1.192,340,1.342,342,1.592,344,1.592,345,1.292,346,1.432,347,1.592,349,1.592,350,1.592,351,1.592,352,1.592,354,1.192,355,1.192,356,1.067,357,1.067,358,1.192,359,1.192,360,1.067,361,1.067,401,1.778,402,1.778,414,2.111,423,2.284,426,3.181,427,3.181,428,3.181,441,2.656,442,3.398,446,3.527,460,2.003,461,2.66,490,2.359,493,1.592,498,2.731,507,2.98,536,1.783,537,2.66,538,3.231,539,2.284,540,4.284,541,3.231,542,3.231,543,2.66,544,3.231,545,4.284,546,3.231,547,3.231,548,3.231,549,3.231,550,3.398,551,3.527,552,1.531,553,2.165,554,4.284,555,4.284,556,2.165,557,4.584,558,2.66,559,2.165,560,3.029,561,1.778,562,2.165,563,2.66,564,2.165,565,1.783,566,1.783,567,1.783,568,2.165,569,2.165,570,2.165,571,2.165,572,2.66,573,3.231,574,3.527,575,3.231,576,2.66]],["title/components/PageNotFoundComponent.html",[0,0.019,231,0.645]],["body/components/PageNotFoundComponent.html",[0,0.034,1,0.825,2,1.148,3,0.502,4,0.432,5,1.022,6,1.022,7,1.022,8,0.432,58,1.022,59,1.618,60,1.306,61,1.275,63,1.275,64,1.029,65,1.275,68,1.175,69,1.275,71,1.275,95,0.039,96,0.815,125,0.815,127,0.737,134,1.254,150,0.502,151,0.825,213,1.022,214,1.275,215,1.275,216,1.022,217,1.455,218,1.022,219,1.275,220,0.825,221,1.022,222,0.825,223,1.022,224,0.825,225,1.022,226,0.825,227,1.022,228,0.825,229,1.022,230,1.022,231,1.175,232,1.394,233,1.022,234,0.825,235,0.825,236,1.022,237,0.825,238,1.022,239,1.022,240,0.825,241,1.022,242,1.022,243,1.022,244,0.031,245,0.031,577,3.158,578,3.158,579,3.158,580,5.461,581,4.786,582,4.786]],["title/interfaces/Product.html",[123,1.199,435,1.083]],["body/interfaces/Product.html",[3,0.565,4,0.487,8,0.487,73,0.487,74,0.673,95,0.039,97,0.654,105,1.741,108,1.68,123,2.058,139,1.784,150,0.565,195,2.275,200,4.683,202,4.683,244,0.033,245,0.033,435,1.562,437,2.379,561,3.132,583,3.559]],["title/injectables/ProductServiceService.html",[86,1.329,584,1.65]],["body/injectables/ProductServiceService.html",[3,0.349,4,0.3,8,0.3,14,1.358,31,2.068,33,0.871,40,2.093,56,1.707,62,2.697,73,0.3,74,0.491,78,1.109,84,1.285,86,1.665,92,1.531,94,1.376,95,0.04,96,0.88,97,0.62,98,1.376,101,1.468,102,1.327,105,1.601,108,1.526,115,1.285,116,1.285,123,2.361,125,0.64,127,0.512,130,1.653,148,1.799,150,0.349,151,0.573,156,1.526,159,1.74,171,1.066,209,1.885,244,0.024,245,0.024,333,2.327,425,1.885,441,2.697,584,2.068,585,1.885,586,4.764,587,1.885,588,4.35,589,3.757,590,3.757,591,4.35,592,3.757,593,3.757,594,4.35,595,3.757,596,4.35,597,3.757,598,3.757,599,2.666,600,2.666,601,2.666,602,2.666,603,2.666,604,2.666,605,2.666,606,2.666,607,2.666,608,2.666,609,2.666,610,2.666,611,2.666,612,2.666,613,2.666,614,2.666,615,2.666,616,3.757,617,3.757,618,4.723,619,4.723,620,3.757,621,4.723,622,3.757,623,3.757,624,3.757,625,3.757,626,3.757,627,3.757,628,4.723,629,4.723,630,4.723,631,4.723,632,3.757,633,3.757,634,3.757,635,3.757,636,3.757,637,3.757,638,3.757,639,3.757,640,3.757,641,3.757,642,3.757,643,3.757,644,3.757,645,3.757,646,3.757,647,3.757,648,3.757,649,3.757,650,3.757,651,2.666,652,2.195,653,2.666,654,3.757,655,2.666,656,2.666,657,2.666,658,2.666,659,3.581,660,2.666,661,2.666,662,2.666,663,3.757,664,2.666,665,3.757,666,2.666,667,2.666,668,2.666,669,2.666,670,2.666,671,2.666,672,2.666,673,2.666,674,2.666,675,2.666,676,4.35,677,2.666,678,2.666,679,2.666,680,2.666,681,2.666]],["title/components/ProductsComponent.html",[0,0.019,234,0.645]],["body/components/ProductsComponent.html",[0,0.024,1,0.439,2,0.741,3,0.267,4,0.23,5,0.543,6,0.543,7,0.543,8,0.23,12,1.786,13,2.01,14,2.043,15,1.698,17,1.805,18,3.01,19,2.01,20,2.316,21,2.289,23,1.7,24,1.369,27,1.821,29,2.577,30,1.896,31,3.149,33,1.009,34,2.939,38,1.843,39,1.009,40,1.369,48,1.116,52,1.915,53,2.201,56,1.698,58,0.543,59,1.472,60,1.188,61,0.823,62,1.915,63,0.823,64,0.664,65,0.823,66,1.218,68,0.894,69,0.823,70,2.543,71,0.823,72,2.543,73,0.23,74,0.404,75,2.459,78,0.912,82,1.502,84,0.912,85,1.442,86,1.843,91,1.896,92,1.301,94,0.993,95,0.04,96,0.761,97,0.468,98,0.993,99,2.311,101,1.252,102,1.108,105,1.319,108,1.388,109,1.843,110,1.879,115,0.912,116,0.912,123,1.49,125,0.801,127,0.392,128,1.264,129,0.737,130,1.264,131,0.602,134,0.666,136,0.543,137,1.264,138,1.264,139,0.602,140,2.635,141,1.442,142,1.442,143,1.442,144,2.183,145,1.442,146,1.442,147,1.442,148,1.502,149,0.816,150,0.267,151,0.439,152,2.052,153,1.442,154,1.442,156,0.912,167,1.442,168,1.679,176,2.694,178,1.679,181,1.235,188,1.843,192,1.679,196,1.502,210,2.635,211,2.183,212,2.183,213,0.543,214,1.108,215,0.823,216,0.543,217,1.108,218,0.543,219,0.823,220,0.439,221,0.543,222,0.439,223,0.543,224,0.439,225,0.543,226,0.439,227,0.543,228,0.439,229,0.543,230,0.543,231,0.439,232,0.489,233,0.543,234,0.894,235,0.439,236,0.543,237,0.439,238,0.543,239,0.543,240,0.439,241,0.543,242,0.543,243,0.543,244,0.02,245,0.02,248,1.369,250,1.502,255,3.423,256,1.369,257,1.235,258,1.843,259,1.522,260,1.522,261,1.522,265,2.183,278,1.915,279,1.915,287,2.939,294,1.915,295,1.915,296,2.577,298,1.915,303,2.543,307,1.915,311,2.939,322,2.543,323,2.183,330,2.939,332,1.7,333,1.522,394,1.679,441,3.505,442,3.322,444,2.183,493,1.522,514,2.543,539,2.183,659,1.679,682,1.442,683,3.088,684,3.088,685,3.088,686,3.088,687,3.088,688,3.088,689,3.727,690,3.088,691,3.088,692,4.158,693,3.088,694,3.088,695,3.088,696,2.039,697,2.039,698,2.543,699,3.088,700,2.039,701,2.039,702,3.088,703,2.183,704,3.088,705,3.088,706,2.039,707,2.039,708,2.039,709,2.039,710,2.039,711,2.039,712,2.039,713,2.039,714,1.679,715,2.039,716,2.039,717,2.039,718,3.088,719,2.039,720,1.679,721,2.039,722,3.088]],["title/components/ProfileComponent.html",[0,0.019,235,0.645]],["body/components/ProfileComponent.html",[0,0.023,1,0.419,2,0.715,3,0.255,4,0.219,5,0.519,6,0.519,7,0.519,8,0.219,12,1.449,13,2.073,14,1.933,15,1.467,17,1.884,19,2.139,20,1.469,23,1.641,24,2.196,27,1.748,28,2.541,30,1.467,33,0.974,38,2.046,39,0.974,41,2.107,43,1.848,45,3.396,48,1.077,53,1.469,56,1.668,58,0.519,59,1.458,60,1.177,61,0.794,63,0.794,64,0.641,65,0.794,66,1.184,67,1.605,68,0.873,69,0.794,71,0.794,73,0.219,74,0.474,78,0.88,82,1.467,84,1.07,87,2,88,2.274,89,1.605,90,1.326,91,1.873,92,1.23,94,0.519,95,0.04,96,0.617,97,0.457,98,0.519,101,0.965,102,0.965,109,2.37,110,1.981,115,0.88,116,0.88,121,1.785,125,0.844,126,0.959,127,0.374,129,0.704,131,0.575,132,0.959,133,0.779,134,0.636,135,0.863,136,0.519,148,1.077,149,0.779,150,0.255,151,0.641,152,1.641,156,1.07,159,0.779,160,1.072,162,0.959,171,0.779,175,1.376,176,1.785,181,1.449,188,1.605,195,1.192,196,1.467,206,1.641,213,0.519,214,1.082,215,0.794,216,0.519,217,1.082,218,0.519,219,0.794,220,0.419,221,0.519,222,0.419,223,0.519,224,0.419,225,0.519,226,0.419,227,0.519,228,0.419,229,0.519,230,0.519,231,0.419,232,0.467,233,0.519,234,0.419,235,0.873,236,0.519,237,0.419,238,0.519,239,0.519,240,0.419,241,0.519,242,0.519,243,0.519,244,0.019,245,0.019,248,1.321,249,2.235,250,2.064,256,1.321,257,1.192,258,1.799,259,1.469,260,1.469,261,1.469,277,2.107,281,3.664,282,2.516,285,1.641,287,2.107,294,1.848,295,3.214,296,1.848,323,2.107,332,1.641,333,1.785,335,1.467,337,1.619,339,1.072,340,1.207,342,2.156,343,3.396,344,2.156,345,1.449,346,1.605,347,1.785,349,1.785,350,2.156,351,2.156,352,2.156,354,1.072,355,1.072,356,0.959,357,0.959,358,1.072,359,1.072,360,0.959,361,0.959,373,1.207,385,1.207,401,1.641,402,1.641,413,1.848,414,2,416,2.107,417,2.107,418,2.107,419,2.107,420,2.107,421,2.107,423,2.107,460,1.848,490,1.641,493,1.469,499,3.664,507,1.848,550,3.263,552,1.376,560,2.869,561,1.641,563,2.454,565,1.603,566,1.603,567,1.603,576,2.454,703,2.107,723,1.603,724,2.981,725,4.059,726,2.981,727,2.454,728,2.981,729,2.981,730,2.981,731,2.981,732,2.981,733,2.981,734,3.623,735,4.059,736,2.981,737,2.981,738,4.059,739,1.947,740,1.947,741,2.454,742,1.947,743,1.947,744,1.947,745,1.603,746,1.947,747,1.947,748,2.981,749,1.947,750,1.947,751,1.947,752,1.947,753,2.981,754,1.947,755,1.947,756,1.947,757,1.947,758,1.947]],["title/components/RecoverPasswordComponent.html",[0,0.019,237,0.645]],["body/components/RecoverPasswordComponent.html",[0,0.026,1,0.49,2,0.805,3,0.298,4,0.257,5,0.608,6,0.608,7,0.608,8,0.257,15,1.44,17,1.733,25,1.342,27,1.733,30,0.824,40,1.488,58,0.608,59,1.502,60,1.213,61,0.894,63,0.894,64,0.857,65,0.894,66,1.302,67,1.766,68,0.945,69,0.894,71,0.894,73,0.257,74,0.439,78,0.991,82,1.588,83,3.618,84,0.991,87,1.963,88,2.165,89,1.488,90,1.436,91,1.83,92,1.457,94,0.608,95,0.04,96,0.679,97,0.585,98,0.608,101,1.061,102,1.171,115,1.383,116,1.383,118,2.47,119,2.903,121,2.307,125,0.835,127,0.438,129,0.824,131,0.673,132,1.123,133,0.912,134,0.745,135,1.011,136,0.608,139,1.446,148,1.693,150,0.298,151,0.49,156,1.176,159,1.342,162,1.654,171,1.593,181,0.912,195,2.025,196,1.77,197,2.419,199,1.848,213,0.608,214,0.894,215,0.894,216,0.608,217,1.171,218,0.608,219,0.894,220,0.49,221,0.608,222,0.49,223,0.608,224,0.49,225,0.608,226,0.49,227,0.608,228,0.49,229,0.608,230,0.608,231,0.49,232,0.547,233,0.608,234,0.49,235,0.49,236,0.608,237,0.945,238,1.349,239,0.608,240,0.49,241,0.608,242,0.608,243,0.608,244,0.022,245,0.022,250,1.917,257,1.342,279,2.081,289,2.816,337,1.601,345,1.959,346,2.245,385,1.414,401,1.255,402,1.255,403,2.081,404,2.081,413,3.222,414,2.614,490,1.848,498,1.612,502,3.311,523,1.877,529,1.877,530,1.877,531,1.877,532,1.877,533,1.877,534,1.877,552,1.612,574,2.764,714,3.28,720,2.764,759,4.556,760,4.556,761,1.877,762,3.357,763,3.357,764,4.684,765,4.684,766,3.984,767,3.984,768,3.357,769,4.394,770,3.357,771,2.28,772,2.28,773,2.28,774,2.28,775,2.28,776,2.28,777,2.28,778,2.28,779,2.28,780,2.28,781,4.394,782,2.28,783,2.28,784,2.28,785,2.28,786,2.28,787,2.28,788,2.28,789,3.984,790,2.28,791,2.28,792,2.28,793,2.28,794,2.28,795,2.28,796,3.357,797,3.357,798,2.28,799,2.28,800,2.28,801,2.28,802,2.28,803,2.28,804,3.357,805,3.357,806,3.357]],["title/components/RegisterComponent.html",[0,0.019,240,0.645]],["body/components/RegisterComponent.html",[0,0.021,1,0.361,2,0.637,3,0.22,4,0.189,5,0.447,6,0.447,7,0.447,8,0.189,12,1.062,13,1.886,14,1.917,15,1.938,16,1.878,17,1.911,19,1.989,20,1.309,21,1.463,24,1.177,25,1.633,27,1.877,28,2.841,30,1.755,32,2.649,33,0.868,37,2.187,38,1.661,39,0.868,40,1.924,41,1.878,42,2.649,43,2.923,44,2.692,48,0.96,53,1.846,56,1.704,58,0.447,59,1.413,60,1.165,61,0.708,63,0.708,64,0.571,65,0.708,66,1.077,67,1.461,68,0.806,69,0.708,71,0.708,73,0.189,74,0.431,78,0.785,82,1.354,84,0.973,87,1.309,88,1.846,89,1.177,90,1.077,91,1.644,92,1.088,94,0.447,95,0.04,96,0.562,97,0.299,98,0.447,101,0.999,102,0.999,108,0.496,110,2.166,121,1.624,125,0.775,126,0.827,127,0.322,129,0.607,131,0.496,132,0.827,133,0.671,134,0.549,135,0.744,136,0.447,148,1.644,149,0.671,150,0.22,151,0.571,152,1.463,156,0.973,157,1.187,158,1.187,159,1.499,160,0.924,162,0.827,171,0.671,177,3.085,181,1.062,195,1.886,196,1.99,197,2.596,199,2.39,204,2.649,206,2.063,213,0.447,214,0.999,215,0.708,216,0.447,217,0.999,218,0.447,219,0.708,220,0.361,221,0.447,222,0.361,223,0.447,224,0.361,225,0.447,226,0.361,227,0.447,228,0.361,229,0.447,230,0.447,231,0.361,232,0.403,233,0.447,234,0.361,235,0.361,236,0.447,237,0.361,238,0.447,239,0.447,240,0.806,241,0.878,242,0.447,243,0.447,244,0.017,245,0.017,248,1.177,249,2.919,250,1.797,256,1.177,257,1.062,258,1.661,259,1.309,260,1.309,261,1.309,263,2.187,269,2.714,272,3.085,274,3.085,275,1.187,277,1.878,278,1.647,279,1.647,282,2.323,288,2.187,289,1.878,291,1.878,293,2.187,295,1.647,298,1.647,307,1.647,309,1.878,312,1.878,326,2.187,327,2.649,328,2.187,332,2.063,333,1.846,335,1.354,337,1.225,339,0.924,341,1.382,342,1.624,343,3.215,344,1.624,345,1.499,346,1.661,347,1.309,349,0.827,350,1.624,351,1.624,352,1.624,354,0.924,355,0.924,356,0.827,357,0.827,358,0.924,359,0.924,360,0.827,361,0.827,373,1.041,374,1.382,375,1.382,376,1.382,377,1.382,378,1.382,379,1.382,380,1.382,381,1.382,382,1.382,383,1.382,385,1.041,386,1.187,387,1.187,389,1.382,390,2.187,391,1.382,392,1.382,393,2.187,395,1.382,399,1.878,403,1.041,404,1.041,412,2.187,413,2.323,414,2.5,416,1.878,417,2.649,418,2.649,419,1.878,420,1.878,421,1.878,444,1.878,464,2.649,487,2.187,488,2.33,493,1.846,499,3.334,507,1.647,508,2.187,519,2.187,537,2.187,539,1.878,543,2.187,558,2.187,698,3.085,703,1.878,727,2.187,741,2.187,745,2.187,807,1.382,808,2.657,809,2.657,810,3.748,811,2.657,812,2.657,813,3.748,814,2.657,815,4.083,816,3.748,817,2.657,818,2.657,819,2.657,820,2.657,821,1.679,822,2.657,823,1.679,824,1.679,825,2.657,826,2.657,827,2.657,828,2.657,829,2.657,830,2.657,831,2.657,832,2.657,833,2.657,834,2.657,835,2.657,836,2.657,837,3.297,838,2.657,839,2.657,840,2.657,841,3.297,842,2.657,843,2.657,844,2.657,845,2.657,846,1.679,847,1.679,848,1.679,849,1.679,850,1.679,851,2.657,852,1.679,853,2.657,854,1.679,855,1.679,856,1.679,857,1.679,858,1.679,859,1.679,860,1.679,861,1.679,862,1.679,863,1.382]],["title/interfaces/Rol.html",[335,1.083,435,1.083]],["body/interfaces/Rol.html",[3,0.595,4,0.512,8,0.512,73,0.512,74,0.694,95,0.039,97,0.597,105,1.658,108,1.708,139,1.658,150,0.595,244,0.034,245,0.034,335,1.917,435,1.645,437,2.506,561,3.184,864,3.747]],["title/interfaces/User.html",[337,0.98,435,1.083]],["body/interfaces/User.html",[3,0.515,4,0.443,8,0.443,73,0.443,74,0.636,95,0.04,97,0.678,105,1.558,108,1.627,125,0.67,139,1.836,150,0.515,244,0.031,245,0.031,335,2.151,337,1.588,342,2.714,344,2.714,345,2.203,346,2.442,347,2.714,349,2.714,350,2.714,351,2.714,352,2.714,435,1.422,437,2.165,865,3.238]],["title/injectables/UserServiceService.html",[90,0.98,584,1.65]],["body/injectables/UserServiceService.html",[3,0.258,4,0.222,8,0.222,27,0.985,33,1.517,39,1.336,48,1.478,64,0.425,73,0.222,74,0.394,78,0.89,84,0.583,90,0.985,91,1.677,92,1.508,94,1.359,95,0.041,96,0.869,97,0.612,98,1.359,101,1.447,102,1.09,105,1.3,108,1.649,115,1.208,116,1.208,118,1.868,119,1.224,125,0.75,127,0.379,136,0.526,139,1.649,148,2.018,150,0.258,151,0.425,156,1.506,160,1.087,171,1.761,244,0.019,245,0.019,250,1.089,253,3.009,266,3.009,270,3.367,271,3.367,285,1.659,332,2.424,333,2.452,335,1.983,337,1.925,339,1.087,340,1.224,342,2.513,344,1.801,345,2.04,346,2.345,347,1.801,349,1.801,350,2.379,351,2.379,352,2.379,366,1.626,373,1.224,386,1.396,387,1.396,399,2.13,403,2.535,404,1.224,405,1.626,422,1.626,425,1.396,488,2.13,502,2.891,550,2.583,551,3.367,560,3.113,561,2.74,572,2.481,584,1.659,585,1.396,587,1.396,652,1.626,863,1.626,866,4.687,867,3.014,868,3.654,869,3.014,870,3.014,871,3.014,872,3.014,873,3.014,874,3.654,875,4.089,876,3.014,877,3.014,878,1.975,879,1.975,880,3.014,881,1.975,882,1.975,883,1.975,884,1.975,885,1.975,886,1.975,887,3.014,888,1.975,889,1.975,890,1.975,891,1.975,892,1.975,893,3.014,894,1.975,895,1.975,896,1.975,897,3.014,898,4.089,899,1.975,900,3.014,901,1.975,902,1.975,903,1.975,904,3.654,905,1.975,906,3.014,907,3.014,908,3.014,909,3.014,910,3.014,911,3.014,912,4.641,913,4.641,914,4.978,915,4.089,916,3.014,917,3.014,918,3.014,919,3.014,920,3.014,921,3.014,922,3.014,923,3.014,924,3.014,925,3.014,926,3.014,927,3.014,928,3.014,929,3.014,930,3.014,931,1.975,932,1.975,933,1.975,934,1.626,935,1.975,936,1.975,937,4.089,938,3.014,939,3.014,940,1.975,941,4.089,942,1.975,943,1.975,944,1.975,945,1.975,946,1.975,947,1.975,948,1.975,949,3.654,950,4.089,951,3.014,952,1.975,953,1.975,954,1.975,955,1.975,956,1.975,957,1.975,958,1.975,959,1.975,960,1.975,961,1.975,962,1.975,963,1.975,964,1.975,965,1.975,966,1.975,967,1.975,968,1.975,969,1.975]],["title/coverage.html",[970,3.355]],["body/coverage.html",[0,0.039,1,0.767,8,0.402,9,3.126,10,3.231,11,3.231,60,0.767,68,0.767,75,2.776,86,1.581,90,1.166,95,0.04,97,0.402,123,1.426,137,3.408,159,2.442,220,0.767,222,0.767,224,0.767,226,0.767,228,0.767,231,0.767,234,0.767,235,0.767,237,0.767,240,0.767,244,0.03,245,0.03,246,2.937,247,2.937,335,1.289,337,1.166,424,2.937,435,1.922,436,2.211,438,2.937,439,3.231,477,2.937,496,2.937,536,2.937,577,2.937,578,2.937,579,2.937,583,2.937,584,2.516,586,2.937,587,3.231,682,3.231,723,2.937,759,2.937,760,2.937,761,2.937,807,2.937,864,2.937,865,2.937,866,2.937,970,2.937,971,3.567,972,3.567,973,3.567,974,3.763,975,5.936,976,2.522,977,3.567,978,3.763,979,5.318,980,2.937,981,2.937,982,2.937,983,2.937,984,3.567,985,3.567,986,4.57,987,3.567,988,4.57,989,4.57,990,3.567,991,3.567,992,3.567,993,3.567,994,3.567,995,3.567,996,4.57,997,3.567,998,4.57,999,3.567,1000,3.567,1001,3.567,1002,2.937,1003,2.937,1004,2.937,1005,3.567,1006,3.567]],["title/dependencies.html",[1007,1.775,1008,2.965]],["body/dependencies.html",[95,0.04,127,0.851,131,1.308,133,1.772,136,1.18,244,0.034,245,0.034,934,3.647,1008,3.647,1009,4.43,1010,6.065,1011,4.43,1012,5.553,1013,5.222,1014,4.43,1015,3.647,1016,4.43,1017,3.647,1018,4.43,1019,4.43,1020,4.43,1021,4.43,1022,4.43,1023,4.43,1024,4.43]],["title/miscellaneous/functions.html",[1025,1.557,1026,2.965]],["body/miscellaneous/functions.html",[9,2.643,10,3.014,11,3.608,60,1.175,73,0.48,75,3.235,94,1.456,95,0.039,96,0.931,97,0.615,98,1.456,101,1.543,102,1.136,105,1.78,138,3.387,139,1.613,244,0.033,245,0.033,439,3.014,682,3.014,974,4.498,976,3.862,1025,2.643,1026,3.51,1027,4.263,1028,4.263,1029,4.263,1030,4.263]],["title/index.html",[73,0.283,1031,2.512,1032,2.512]],["body/index.html",[0,0.035,4,0.454,95,0.032,96,0.688,232,0.968,244,0.032,245,0.032,357,1.988,360,1.988,361,1.988,976,4.031,1004,3.322,1007,2.852,1015,4.065,1017,3.322,1033,4.035,1034,4.937,1035,4.035,1036,5.335,1037,5.335,1038,3.322,1039,4.035,1040,5.876,1041,4.035,1042,4.035,1043,4.035,1044,4.035,1045,4.035,1046,4.035,1047,4.035,1048,4.035,1049,4.035,1050,4.035,1051,4.035,1052,5.335,1053,5.335,1054,4.035,1055,5.559,1056,4.035,1057,4.035,1058,4.035,1059,4.035,1060,4.937,1061,4.937,1062,5.559,1063,4.035,1064,4.937,1065,4.937,1066,4.035,1067,5.802,1068,4.035,1069,4.035,1070,4.035,1071,4.937,1072,4.035,1073,4.035,1074,4.035,1075,4.035,1076,5.335,1077,4.035,1078,4.035,1079,4.035,1080,4.035,1081,2.852,1082,4.035]],["title/modules.html",[1083,3.355]],["body/modules.html",[95,0.035,244,0.035,245,0.035,1083,3.972]],["title/overview.html",[1081,2.88]],["body/overview.html",[2,1.144,39,1.559,95,0.035,244,0.035,245,0.035,264,3.371,437,2.626,585,3.371,1081,3.371,1084,4.77]],["title/properties.html",[74,0.471,1007,1.775]],["body/properties.html",[74,0.627,95,0.037,244,0.035,245,0.035,1038,3.949,1085,4.797]],["title/miscellaneous/variables.html",[1025,1.557,1086,2.965]],["body/miscellaneous/variables.html",[64,0.936,73,0.49,95,0.04,97,0.582,115,1.684,116,1.684,244,0.033,245,0.033,978,3.584,980,4.538,981,4.538,982,3.584,983,4.255,1002,3.584,1003,4.255,1025,2.698,1086,3.584,1087,4.353,1088,4.353,1089,5.168,1090,5.168,1091,5.168,1092,4.353,1093,4.353,1094,4.353,1095,4.353,1096,4.353,1097,4.353,1098,4.353]]],"invertedIndex":[["",{"_index":95,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":159,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1085,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":914,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["06",{"_index":915,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["1",{"_index":33,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["12",{"_index":1084,"title":{},"body":{"overview.html":{}}}],["18",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["18.0.0",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1017,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":39,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"overview.html":{}}}],["2.3.0",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":803,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["25",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":48,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["3/5",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":629,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["4",{"_index":264,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"overview.html":{}}}],["4.18.2",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":618,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["6/12",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["abs",{"_index":631,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["acceder",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["acceso",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["accion",{"_index":208,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["actual_component",{"_index":243,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["actualizacion",{"_index":728,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actualizado",{"_index":756,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actualizar",{"_index":45,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{}}}],["add",{"_index":360,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["addcarrito",{"_index":589,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addcarrito(product",{"_index":599,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addcarrito(product:product",{"_index":677,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addproduct",{"_index":590,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addproduct(product",{"_index":601,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addproduct(product:product",{"_index":655,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["addtocart",{"_index":690,"title":{},"body":{"components/ProductsComponent.html":{}}}],["addtocart(id",{"_index":696,"title":{},"body":{"components/ProductsComponent.html":{}}}],["addtocart(id:number",{"_index":712,"title":{},"body":{"components/ProductsComponent.html":{}}}],["adduser",{"_index":869,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["adduser(user",{"_index":880,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["adm",{"_index":61,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["administracion",{"_index":16,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["administrador",{"_index":572,"title":{},"body":{"components/NavComponent.html":{},"injectables/UserServiceService.html":{}}}],["administradores",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["admproductscomponent",{"_index":1,"title":{"components/AdmProductsComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["admuserscomponent",{"_index":220,"title":{"components/AdmUsersComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["agrega",{"_index":699,"title":{},"body":{"components/ProductsComponent.html":{}}}],["agregado",{"_index":717,"title":{},"body":{"components/ProductsComponent.html":{}}}],["agregamos",{"_index":695,"title":{},"body":{"components/ProductsComponent.html":{}}}],["agregar",{"_index":29,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{}}}],["al",{"_index":176,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["alert('credenciales",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["alert('debe",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert('error",{"_index":175,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{}}}],["alert('falta",{"_index":714,"title":{},"body":{"components/ProductsComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["alert('inicio",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["alert('las",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert('no",{"_index":720,"title":{},"body":{"components/ProductsComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["alert('producto",{"_index":178,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProductsComponent.html":{}}}],["alert('usuario",{"_index":385,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["alert('ya",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["algun",{"_index":280,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["algunos",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["amplia",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":1036,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":131,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":133,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":136,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["apellido",{"_index":412,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["apellidos",{"_index":344,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["apellidos:'garrido",{"_index":907,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["apellidos:'gonzalez",{"_index":917,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["apellidos:'pinto",{"_index":922,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["apellidos:this.userform.get('apellidos')?.value",{"_index":376,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["aplicación",{"_index":539,"title":{},"body":{"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["app",{"_index":60,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":222,"title":{"components/AppComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1045,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apretar",{"_index":50,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["aprobadas",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aqu",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1056,"title":{},"body":{"index.html":{}}}],["asignandole",{"_index":251,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["automatically",{"_index":1046,"title":{},"body":{"index.html":{}}}],["backtoproducts",{"_index":453,"title":{},"body":{"components/CartComponent.html":{}}}],["base",{"_index":741,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["behaviorsubject",{"_index":932,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["bienvenido",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RecoverPasswordComponent.html":{},"injectables/UserServiceService.html":{}}}],["bootstrap",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botón",{"_index":51,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/NavComponent.html":{}}}],["browser",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1055,"title":{},"body":{"index.html":{}}}],["cada",{"_index":442,"title":{},"body":{"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{}}}],["call",{"_index":358,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["calle",{"_index":350,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["calle:'av",{"_index":926,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["calle:this.userform.get('calle')?.value",{"_index":379,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["called",{"_index":354,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["campos",{"_index":290,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["capabilities",{"_index":1074,"title":{},"body":{"index.html":{}}}],["capaz",{"_index":730,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cargar",{"_index":54,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["carrito",{"_index":441,"title":{},"body":{"components/CartComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{}}}],["cart",{"_index":436,"title":{"interfaces/Cart.html":{}},"body":{"interfaces/Cart.html":{},"components/CartComponent.html":{},"coverage.html":{}}}],["cart'},{'name",{"_index":225,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["cart.component.css",{"_index":452,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.html",{"_index":451,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":224,"title":{"components/CartComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["case",{"_index":619,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["caso",{"_index":737,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cerrada",{"_index":445,"title":{},"body":{"components/CartComponent.html":{}}}],["cerrar",{"_index":557,"title":{},"body":{"components/NavComponent.html":{}}}],["change",{"_index":1048,"title":{},"body":{"index.html":{}}}],["check",{"_index":1079,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1070,"title":{},"body":{"index.html":{}}}],["cid",{"_index":908,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["cl",{"_index":142,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["class",{"_index":151,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["cleancarrito",{"_index":591,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["cleancarrito():void",{"_index":681,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["cli",{"_index":1037,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["clientes",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["clp",{"_index":145,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["code",{"_index":1050,"title":{},"body":{"index.html":{}}}],["command",{"_index":1071,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":66,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["como",{"_index":464,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["completo",{"_index":538,"title":{},"body":{"components/NavComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":218,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["components/nav/nav.component",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["comprar",{"_index":722,"title":{},"body":{"components/ProductsComponent.html":{}}}],["compras",{"_index":474,"title":{},"body":{"components/CartComponent.html":{}}}],["comprobar",{"_index":805,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["comuna",{"_index":352,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["comuna:'las",{"_index":929,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["comuna:this.userform.get('comuna')?.value",{"_index":383,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["con",{"_index":40,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["condes",{"_index":930,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["config",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configura",{"_index":259,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["configuración",{"_index":575,"title":{},"body":{"components/NavComponent.html":{}}}],["conocido",{"_index":684,"title":{},"body":{"components/ProductsComponent.html":{}}}],["console.log(form",{"_index":752,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(this.productoform.value",{"_index":186,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["const",{"_index":171,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["constructor(fb",{"_index":275,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(private",{"_index":936,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["constructor(productservice",{"_index":85,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["constructor(router",{"_index":878,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["constructor(userservice",{"_index":552,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["contiene",{"_index":687,"title":{},"body":{"components/ProductsComponent.html":{}}}],["contrario",{"_index":283,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["contraseña",{"_index":414,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["contraseñas",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{}}}],["correctamente",{"_index":181,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["correo",{"_index":346,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["correo:this.userform.get('correo')?.value",{"_index":381,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creacion",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creado",{"_index":392,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["crear",{"_index":43,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["credenciales",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["cualquiera",{"_index":252,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["cuando",{"_index":34,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{}}}],["cumple",{"_index":325,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["currency",{"_index":144,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["datos",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["debe",{"_index":393,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["debemos",{"_index":49,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["deben",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["default",{"_index":115,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":92,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["del",{"_index":109,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["deleteproduct",{"_index":592,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["deleteproduct(id",{"_index":604,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["deleteproduct(id:number):void",{"_index":660,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["deleteproductcarrito",{"_index":593,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["deleteproductcarrito(id",{"_index":606,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["deleteproductcarrito(id:number):void",{"_index":679,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["dependencies",{"_index":1008,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desconocido",{"_index":685,"title":{},"body":{"components/ProductsComponent.html":{}}}],["descripcion",{"_index":561,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"interfaces/Rol.html":{},"injectables/UserServiceService.html":{}}}],["descripcion:'\"phone",{"_index":620,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["descripcion:'articulo",{"_index":627,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["descripcion:'soporte",{"_index":648,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["descripcion:'taladro",{"_index":636,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["descripcion:['',validators.required",{"_index":164,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["descripción",{"_index":198,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["desde",{"_index":37,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["deseado",{"_index":462,"title":{},"body":{"components/CartComponent.html":{}}}],["despacho(opcional",{"_index":420,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["detalle",{"_index":318,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["dev",{"_index":1042,"title":{},"body":{"index.html":{}}}],["development",{"_index":1039,"title":{},"body":{"index.html":{}}}],["dirección",{"_index":419,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":216,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":242,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1054,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1059,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":255,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{}}}],["dist",{"_index":1058,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["donde",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["dos",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":288,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["e2e",{"_index":1068,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["el",{"_index":27,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["element",{"_index":215,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["eliminar",{"_index":461,"title":{},"body":{"components/CartComponent.html":{},"components/NavComponent.html":{}}}],["ellos",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["email",{"_index":413,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["email:['',[validators.required",{"_index":783,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["emitevent",{"_index":184,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["en",{"_index":56,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["encantados",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["encontr",{"_index":721,"title":{},"body":{"components/ProductsComponent.html":{}}}],["encuentra",{"_index":705,"title":{},"body":{"components/ProductsComponent.html":{}}}],["end",{"_index":1067,"title":{},"body":{"index.html":{}}}],["es",{"_index":196,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["esta",{"_index":307,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["estamos",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["este",{"_index":19,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["esto",{"_index":541,"title":{},"body":{"components/NavComponent.html":{}}}],["estos",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["eventcoalescing",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":107,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["execute",{"_index":1064,"title":{},"body":{"index.html":{}}}],["exista",{"_index":738,"title":{},"body":{"components/ProfileComponent.html":{}}}],["existe",{"_index":279,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["existen",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["existente",{"_index":47,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["exitosamente",{"_index":389,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["exitoso",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["export",{"_index":150,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["express",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fallido",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["false",{"_index":119,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RecoverPasswordComponent.html":{},"injectables/UserServiceService.html":{}}}],["fb",{"_index":87,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["fecha",{"_index":417,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["fecha_nac",{"_index":349,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["fecha_nac:'1995",{"_index":913,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["fecha_nac:this.userform.get('fecha_nac')?.value",{"_index":382,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["filamento",{"_index":630,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["files",{"_index":1049,"title":{},"body":{"index.html":{}}}],["first",{"_index":357,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["form",{"_index":750,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formatear",{"_index":153,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["formatnumbertocurrency",{"_index":75,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatnumbertocurrency(number",{"_index":138,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/functions.html":{}}}],["formatnumbertocurrency(producto.valor",{"_index":212,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["formattednumber",{"_index":140,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["formattednumber.replace('clp",{"_index":146,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["formbuilder",{"_index":88,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":121,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["formulario",{"_index":28,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["found",{"_index":580,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":233,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["found.component.css",{"_index":582,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":581,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":579,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":578,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["founduser",{"_index":950,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["funcion",{"_index":298,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["funcionarios",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["función",{"_index":152,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["function",{"_index":137,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1026,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1075,"title":{},"body":{"index.html":{}}}],["gama",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestore",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["garantía",{"_index":642,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["generamos",{"_index":286,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["generar",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["generate",{"_index":1052,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1035,"title":{},"body":{"index.html":{}}}],["getcarrito",{"_index":594,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getcarrito():product",{"_index":675,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getproductbyid",{"_index":595,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getproductbyid(id",{"_index":609,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getproductbyid(id:number):product|undefined",{"_index":657,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getproductos",{"_index":79,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["getproducts",{"_index":596,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getproducts():product",{"_index":653,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["getrolbyid",{"_index":870,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getrolbyid(id",{"_index":882,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getrolbyid(id:number",{"_index":943,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getroles",{"_index":270,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["getting",{"_index":1031,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":871,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyemail(correo",{"_index":885,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyemail(correo:string",{"_index":942,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyid",{"_index":872,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyid(id",{"_index":887,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyusername",{"_index":873,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyusername(username",{"_index":889,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserbyusername(username:string):user",{"_index":940,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserlog",{"_index":874,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getuserlog():user",{"_index":948,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["getusers",{"_index":271,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["go",{"_index":1078,"title":{},"body":{"index.html":{}}}],["grilla",{"_index":686,"title":{},"body":{"components/ProductsComponent.html":{}}}],["guardamos",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["guardar",{"_index":205,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{}}}],["habilitar",{"_index":57,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["hace",{"_index":315,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["help",{"_index":1076,"title":{},"body":{"index.html":{}}}],["hogar",{"_index":639,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["home",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":227,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.css",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":226,"title":{"components/HomeComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["html",{"_index":214,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["http://localhost:4200",{"_index":1044,"title":{},"body":{"index.html":{}}}],["id",{"_index":108,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["id:0",{"_index":560,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserServiceService.html":{}}}],["id:1",{"_index":616,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["id:2",{"_index":625,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["id:3",{"_index":634,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["id:4",{"_index":646,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["id:this.userservice.getusers().length+1",{"_index":374,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["id_mod",{"_index":588,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["identificador",{"_index":311,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["identifier",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["if(!id",{"_index":713,"title":{},"body":{"components/ProductsComponent.html":{}}}],["if(!password",{"_index":788,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["if(!prod_mod",{"_index":174,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["if(!this.userform.valid",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(!user",{"_index":797,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["if(email.trim().length",{"_index":795,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["if(n_rol",{"_index":372,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["if(pass.trim",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(pass.trim().length",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(producto",{"_index":192,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProductsComponent.html":{}}}],["if(res",{"_index":755,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(rol",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["if(this.loginform.valid",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.modificar",{"_index":170,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{}}}],["if(this.productoform.valid",{"_index":169,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["if(this.productos.length",{"_index":469,"title":{},"body":{"components/CartComponent.html":{}}}],["if(this.user.username.length",{"_index":746,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(this.username.trim().length",{"_index":794,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["if(this.userservice.getuserlog().username.length",{"_index":158,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["if(user",{"_index":399,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["if(username.trim().length",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iguales",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imagen",{"_index":203,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["img",{"_index":202,"title":{},"body":{"components/AdmProductsComponent.html":{},"interfaces/Product.html":{}}}],["img:\"carcasa_iphone_6.jpg",{"_index":624,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["img:\"soporte_telefono.jpg",{"_index":650,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["img:\"taladro.webp",{"_index":645,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["img:\"thanos_imp_3d.jpg",{"_index":633,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["img:['',validators.required",{"_index":166,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["implements",{"_index":361,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["import",{"_index":125,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["importa",{"_index":256,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["importes",{"_index":546,"title":{},"body":{"components/NavComponent.html":{}}}],["imports",{"_index":65,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["impreso",{"_index":628,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicar",{"_index":289,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["informacion",{"_index":323,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["información",{"_index":313,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["ingres",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["ingresa",{"_index":806,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["ingresada",{"_index":324,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["ingresadas",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ingresados",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ingresar",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ingreso",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["inici",{"_index":726,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inicia",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["iniciamos",{"_index":35,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["inicio",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["initializing",{"_index":355,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["injectable",{"_index":584,"title":{"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{}},"body":{"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":585,"title":{},"body":{"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{},"overview.html":{}}}],["input",{"_index":356,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["interface",{"_index":435,"title":{"interfaces/Cart.html":{},"interfaces/Product.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{}},"body":{"interfaces/Cart.html":{},"interfaces/Product.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":437,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Product.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"overview.html":{}}}],["inválidas",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["iphone",{"_index":622,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["isincart",{"_index":691,"title":{},"body":{"components/ProductsComponent.html":{}}}],["isincart(id",{"_index":700,"title":{},"body":{"components/ProductsComponent.html":{}}}],["isincart(id:number",{"_index":709,"title":{},"body":{"components/ProductsComponent.html":{}}}],["item.id",{"_index":711,"title":{},"body":{"components/ProductsComponent.html":{}}}],["javier",{"_index":916,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["javier@gmail.com",{"_index":918,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["karma",{"_index":1066,"title":{},"body":{"index.html":{}}}],["la",{"_index":15,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["las",{"_index":327,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":213,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["limpia",{"_index":447,"title":{},"body":{"components/CartComponent.html":{}}}],["limpiar",{"_index":206,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["limpiarform",{"_index":272,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["limpiarformularioproducto",{"_index":80,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["lista",{"_index":22,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["listar",{"_index":555,"title":{},"body":{"components/NavComponent.html":{}}}],["llama",{"_index":702,"title":{},"body":{"components/ProductsComponent.html":{}}}],["llamado",{"_index":540,"title":{},"body":{"components/NavComponent.html":{}}}],["llamar",{"_index":261,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["lo",{"_index":282,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["loading",{"_index":764,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["loggeado",{"_index":281,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["login",{"_index":285,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserServiceService.html":{}}}],["login'},{'name",{"_index":229,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["login(username",{"_index":893,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["login.component.css",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":228,"title":{"components/LoginComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":551,"title":{},"body":{"components/NavComponent.html":{},"injectables/UserServiceService.html":{}}}],["los",{"_index":24,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["lógica",{"_index":568,"title":{},"body":{"components/NavComponent.html":{}}}],["mantenedores",{"_index":573,"title":{},"body":{"components/NavComponent.html":{}}}],["mantener",{"_index":440,"title":{},"body":{"components/CartComponent.html":{}}}],["manzano",{"_index":927,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["marca",{"_index":640,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["matching",{"_index":245,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["men",{"_index":545,"title":{},"body":{"components/NavComponent.html":{}}}],["menu",{"_index":537,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meses",{"_index":643,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["message",{"_index":765,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["methods",{"_index":78,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["metodo",{"_index":460,"title":{},"body":{"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["metodos",{"_index":554,"title":{},"body":{"components/NavComponent.html":{}}}],["miscellaneous",{"_index":1025,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismo",{"_index":41,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["model/product",{"_index":130,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{}}}],["model/rol",{"_index":340,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserServiceService.html":{}}}],["model/user",{"_index":339,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["modificado",{"_index":180,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{}}}],["modificar",{"_index":76,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/NavComponent.html":{}}}],["modules",{"_index":1083,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modulo",{"_index":248,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["momento",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["more",{"_index":1077,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":112,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["mostrarproducto",{"_index":81,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["mostrarproducto(id",{"_index":104,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["mostrarproducto(id:number",{"_index":189,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["mostraruser",{"_index":273,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["mostraruser(id",{"_index":305,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["mostraruser(id:number",{"_index":397,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["muestra",{"_index":20,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["n_rol",{"_index":368,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["n_user",{"_index":373,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["n_user.apellidos",{"_index":387,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["n_user.calle",{"_index":959,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.comuna",{"_index":967,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.correo",{"_index":963,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.fecha_nac",{"_index":965,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.nombres",{"_index":386,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["n_user.numeracion",{"_index":961,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.pass",{"_index":957,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.rol",{"_index":956,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["n_user.rol.descripcion",{"_index":388,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["n_user.username",{"_index":951,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["nacimiento",{"_index":418,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":96,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":547,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":230,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["nav.component.css",{"_index":549,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.html",{"_index":548,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.component",{"_index":134,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["navcomponent",{"_index":68,"title":{"components/NavComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1043,"title":{},"body":{"index.html":{}}}],["necesitamos",{"_index":542,"title":{},"body":{"components/NavComponent.html":{}}}],["need",{"_index":1072,"title":{},"body":{"index.html":{}}}],["new",{"_index":1004,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":898,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["ng",{"_index":1040,"title":{},"body":{"index.html":{}}}],["ngonchanges",{"_index":359,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":82,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoptimizedimage",{"_index":689,"title":{},"body":{"components/ProductsComponent.html":{}}}],["nombre",{"_index":195,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["nombre:'iphone",{"_index":617,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["nombre:'soporte",{"_index":647,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["nombre:'taladro",{"_index":635,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["nombre:'thanos",{"_index":626,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["nombre:['',validators.required",{"_index":163,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["nombres",{"_index":342,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["nombres:this.userform.get('nombres')?.value",{"_index":375,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["nos",{"_index":292,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["nuestra",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["nuestro",{"_index":55,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["nueva",{"_index":789,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nuevo",{"_index":32,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["nuevos",{"_index":263,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["null",{"_index":332,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["number",{"_index":105,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["number.tolocalestring('es",{"_index":141,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["numeracion",{"_index":351,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["numeracion:'56555",{"_index":928,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["numeracion:this.userform.get('numeracion')?.value",{"_index":380,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["números",{"_index":154,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["o",{"_index":44,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["objetivo",{"_index":558,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["objeto",{"_index":287,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["obligatoria",{"_index":199,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["obligatorio",{"_index":197,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["observable",{"_index":933,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["obtenemos",{"_index":36,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/NavComponent.html":{}}}],["obtener",{"_index":294,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["obtiene",{"_index":299,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["oninit",{"_index":126,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":83,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["onsubmitrecover",{"_index":769,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["optional",{"_index":98,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":1080,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1081,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["pa.garrido.cid@gmail.com",{"_index":909,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["pablo",{"_index":906,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["package",{"_index":1007,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":232,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":231,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["para",{"_index":14,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["param",{"_index":188,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":465,"title":{},"body":{"components/CartComponent.html":{}}}],["parámetro",{"_index":310,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["pass",{"_index":347,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["pass:'pass1010",{"_index":912,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["pass:['',validators.required",{"_index":786,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["pass:this.userform.get('pass')?.value",{"_index":378,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["password",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"injectables/UserServiceService.html":{}}}],["password'},{'name",{"_index":239,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["password.component.css",{"_index":763,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.html",{"_index":762,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts",{"_index":761,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:16",{"_index":774,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":775,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":776,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":779,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":778,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":777,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":770,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":771,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":773,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:66",{"_index":772,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password/recover",{"_index":760,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password:['',[validators.required",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["pauli@gmail.com",{"_index":923,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["paulina",{"_index":921,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["percutor",{"_index":637,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["perfil",{"_index":576,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["permite",{"_index":293,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["personal",{"_index":729,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personales",{"_index":725,"title":{},"body":{"components/ProfileComponent.html":{}}}],["platform",{"_index":1069,"title":{},"body":{"index.html":{}}}],["podemos",{"_index":42,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["poder",{"_index":329,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["podrás",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["por",{"_index":309,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["precio",{"_index":207,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{}}}],["preguntar",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{},"components/ProductsComponent.html":{}}}],["principal",{"_index":258,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["private",{"_index":156,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["prod",{"_index":614,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["prod.descripcion",{"_index":671,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["prod.id",{"_index":659,"title":{},"body":{"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{}}}],["prod.img",{"_index":673,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["prod.nombre",{"_index":669,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["prod.valor",{"_index":667,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["prod_mod",{"_index":172,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["prod_mod.nombre",{"_index":179,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["prodindex",{"_index":663,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["product",{"_index":123,"title":{"interfaces/Product.html":{}},"body":{"components/AdmProductsComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["producto",{"_index":31,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{}}}],["producto.descripcion",{"_index":211,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["producto.id",{"_index":209,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"injectables/ProductServiceService.html":{}}}],["producto.nombre",{"_index":210,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["productoform",{"_index":77,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["productos",{"_index":18,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{}}}],["products",{"_index":62,"title":{},"body":{"components/AdmProductsComponent.html":{},"interfaces/Cart.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{}}}],["products'},{'name",{"_index":219,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["products.component.css",{"_index":72,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProductsComponent.html":{}}}],["products.component.html",{"_index":70,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProductsComponent.html":{}}}],["products.component.ts",{"_index":11,"title":{},"body":{"components/AdmProductsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["products.component.ts:102",{"_index":103,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:110",{"_index":106,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:42",{"_index":122,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:44",{"_index":120,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:47",{"_index":117,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:48",{"_index":124,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:50",{"_index":113,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:52",{"_index":93,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:74",{"_index":100,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products.component.ts:77",{"_index":114,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["products/adm",{"_index":10,"title":{},"body":{"components/AdmProductsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["productscomponent",{"_index":234,"title":{"components/ProductsComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productservice",{"_index":99,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{}}}],["productserviceservice",{"_index":86,"title":{"injectables/ProductServiceService.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["profile",{"_index":731,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":236,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["profile.component.css",{"_index":733,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":732,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":235,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["profileform",{"_index":734,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1034,"title":{},"body":{"index.html":{}}}],["properties",{"_index":74,"title":{"properties.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"properties.html":{}}}],["provideclienthydration",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":652,"title":{},"body":{"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{}}}],["providerouter(routes",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":550,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserServiceService.html":{}}}],["puedan",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["puede",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pueden",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["puedes",{"_index":262,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{}}}],["página",{"_index":571,"title":{},"body":{"components/NavComponent.html":{}}}],["que",{"_index":110,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["queremos",{"_index":111,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["quitar",{"_index":475,"title":{},"body":{"components/CartComponent.html":{}}}],["quitarproducto",{"_index":454,"title":{},"body":{"components/CartComponent.html":{}}}],["quitarproducto(id",{"_index":458,"title":{},"body":{"components/CartComponent.html":{}}}],["quitarproducto(id:number",{"_index":468,"title":{},"body":{"components/CartComponent.html":{}}}],["reactiveformsmodule",{"_index":67,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["realizadas",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["realizamos",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["realizar",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["recibe",{"_index":463,"title":{},"body":{"components/CartComponent.html":{}}}],["recibir",{"_index":308,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["recover",{"_index":238,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["recoverpassform",{"_index":766,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recoverpasswordcomponent",{"_index":237,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["recupera",{"_index":804,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recuperacion",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recuperar",{"_index":574,"title":{},"body":{"components/NavComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["redirigimos",{"_index":284,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["redirigir",{"_index":296,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["reference",{"_index":1082,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":316,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["referenciando",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["referida",{"_index":314,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["register",{"_index":241,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["register.component.css",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":240,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["registrar",{"_index":204,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["registrarse",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["registrate",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["registro",{"_index":177,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["relevante",{"_index":688,"title":{},"body":{"components/ProductsComponent.html":{}}}],["relevantes",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":1047,"title":{},"body":{"index.html":{}}}],["repet_pass",{"_index":745,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["repet_pass.trim",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repet_pass.trim().length",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repetirla",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repite",{"_index":416,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["requeridos",{"_index":291,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["requiere",{"_index":317,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{}}}],["res",{"_index":753,"title":{},"body":{"components/ProfileComponent.html":{}}}],["respectivamente",{"_index":331,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["results",{"_index":244,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":703,"title":{},"body":{"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["return",{"_index":148,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["returns",{"_index":101,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["rol",{"_index":335,"title":{"interfaces/Rol.html":{}},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["rol.descripcion",{"_index":415,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["rol.id",{"_index":945,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["rol:rol",{"_index":565,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["rol:this.rol",{"_index":563,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["rol:this.rollog",{"_index":904,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["rol_e.id",{"_index":370,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["rolcito",{"_index":348,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["role",{"_index":353,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["roles",{"_index":253,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["rollog",{"_index":867,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["rollog:rol",{"_index":935,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["root",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{}}}],["root'},{'name",{"_index":223,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["router",{"_index":91,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["router:router",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{}}}],["routerlink",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["routeroutlet",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["routing",{"_index":260,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["run",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1060,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":201,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["rxjs",{"_index":934,"title":{},"body":{"injectables/UserServiceService.html":{},"dependencies.html":{}}}],["saber",{"_index":450,"title":{},"body":{"components/CartComponent.html":{}}}],["santiago",{"_index":421,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1051,"title":{},"body":{"index.html":{}}}],["se",{"_index":53,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["sean",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["seleccion",{"_index":301,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["seleccionado",{"_index":330,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["seleccionar",{"_index":394,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{}}}],["seleccionaste",{"_index":448,"title":{},"body":{"components/CartComponent.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ser",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["serve",{"_index":1041,"title":{},"body":{"index.html":{}}}],["server",{"_index":1015,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.service",{"_index":129,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["service.service.ts",{"_index":587,"title":{},"body":{"injectables/ProductServiceService.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["service.service.ts:101",{"_index":886,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:109",{"_index":883,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:117",{"_index":892,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:12",{"_index":615,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:121",{"_index":881,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:125",{"_index":888,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:129",{"_index":884,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:13",{"_index":903,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:133",{"_index":891,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:137",{"_index":896,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:14",{"_index":651,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:153",{"_index":894,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:161",{"_index":901,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:18",{"_index":905,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:183",{"_index":895,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:32",{"_index":902,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:38",{"_index":931,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:45",{"_index":598,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:49",{"_index":611,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:52",{"_index":602,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:55",{"_index":610,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:58",{"_index":605,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:62",{"_index":613,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:78",{"_index":879,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:80",{"_index":608,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:83",{"_index":600,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:84",{"_index":899,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service.service.ts:86",{"_index":607,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:89",{"_index":603,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["service.service.ts:93",{"_index":890,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["service/product/product",{"_index":128,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{}}}],["service/user/user",{"_index":135,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["servicio",{"_index":38,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["servicios",{"_index":449,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{}}}],["sesion",{"_index":446,"title":{},"body":{"components/CartComponent.html":{},"components/NavComponent.html":{}}}],["sesión",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["settimeout",{"_index":800,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["setuserblank",{"_index":875,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["si",{"_index":278,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["sin",{"_index":476,"title":{},"body":{"components/CartComponent.html":{}}}],["sirve",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["solo",{"_index":727,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["son",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"index.html":{}}}],["src/.../adm",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.server.ts",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart.component.ts",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.server.ts",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.component.ts",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/adm",{"_index":9,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":439,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/cart/cart.component.ts:34",{"_index":466,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:36",{"_index":455,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:42",{"_index":457,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:54",{"_index":459,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:64",{"_index":456,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:35",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:55",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/nav/nav.component.ts",{"_index":536,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/components/nav/nav.component.ts:31",{"_index":562,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:35",{"_index":564,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:48",{"_index":553,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:59",{"_index":559,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:71",{"_index":556,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/page",{"_index":577,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/products/products.component.ts",{"_index":682,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/products/products.component.ts:39",{"_index":708,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/products/products.component.ts:40",{"_index":693,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/products/products.component.ts:53",{"_index":706,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/products/products.component.ts:62",{"_index":701,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/products/products.component.ts:70",{"_index":697,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/products/products.component.ts:86",{"_index":707,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":723,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:104",{"_index":740,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:32",{"_index":742,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:36",{"_index":743,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:51",{"_index":736,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:81",{"_index":739,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/recover",{"_index":759,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:143",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:33",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:60",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:79",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/model/cart.ts",{"_index":438,"title":{},"body":{"interfaces/Cart.html":{},"coverage.html":{}}}],["src/app/model/product.ts",{"_index":583,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/app/model/rol.ts",{"_index":864,"title":{},"body":{"interfaces/Rol.html":{},"coverage.html":{}}}],["src/app/model/user.ts",{"_index":865,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/service/product/product",{"_index":586,"title":{},"body":{"injectables/ProductServiceService.html":{},"coverage.html":{}}}],["src/app/service/user/user",{"_index":866,"title":{},"body":{"injectables/UserServiceService.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":1002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":63,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":1032,"title":{"index.html":{}},"body":{}}],["statements",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1057,"title":{},"body":{"index.html":{}}}],["string",{"_index":139,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":143,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["styleurl",{"_index":71,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["su",{"_index":300,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["submit",{"_index":274,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["sus",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["table",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["tambien",{"_index":26,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["teléfono",{"_index":621,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":69,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["tenemos",{"_index":254,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["tenerte",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["test",{"_index":1063,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1073,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1062,"title":{},"body":{"index.html":{}}}],["this.carrito",{"_index":676,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.carrito.filter(prod",{"_index":680,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.carrito.push(product",{"_index":678,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.fb.group",{"_index":162,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getproductos",{"_index":155,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.getroles",{"_index":363,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.getusers",{"_index":362,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.id_mod",{"_index":665,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.limpiarform",{"_index":390,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["this.limpiarformularioproducto",{"_index":182,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.loading",{"_index":802,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.loginform",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.message",{"_index":801,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.modificar",{"_index":193,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{}}}],["this.productoform",{"_index":161,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productoform.get('id')?.setvalue(this.productos.length+1",{"_index":183,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productoform.patchvalue(producto",{"_index":194,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productoform.reset",{"_index":187,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productos",{"_index":167,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productos.filter(producto",{"_index":471,"title":{},"body":{"components/CartComponent.html":{}}}],["this.productos.find(prod",{"_index":715,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.products",{"_index":654,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products.filter(prod",{"_index":661,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products.find(prod",{"_index":658,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products.findindex(producto",{"_index":664,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products.push(product",{"_index":656,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products[prodindex",{"_index":674,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products[prodindex].descripcion",{"_index":670,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products[prodindex].img",{"_index":672,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products[prodindex].nombre",{"_index":668,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.products[prodindex].valor",{"_index":666,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["this.productservice.addcarrito(producto",{"_index":716,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.productservice.addproduct(this.productoform.value",{"_index":185,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productservice.cleancarrito",{"_index":570,"title":{},"body":{"components/NavComponent.html":{}}}],["this.productservice.deleteproductcarrito(id",{"_index":470,"title":{},"body":{"components/CartComponent.html":{}}}],["this.productservice.getcarrito",{"_index":467,"title":{},"body":{"components/CartComponent.html":{}}}],["this.productservice.getcarrito().some(item",{"_index":710,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.productservice.getproductbyid(id",{"_index":190,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productservice.getproducts",{"_index":168,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productservice.id_mod",{"_index":191,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.productservice.updateproduct(this.productoform.value",{"_index":173,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["this.profileform",{"_index":744,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('username')?.disable",{"_index":748,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('username')?.enable",{"_index":749,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.patchvalue(n_user",{"_index":758,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.patchvalue(this.user",{"_index":747,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.reset",{"_index":757,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.value",{"_index":751,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.recoverpassform",{"_index":785,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoverpassform.get('pass')?.value",{"_index":787,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.roles",{"_index":366,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["this.roles.find(rol",{"_index":944,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.roles.find(rol_e",{"_index":369,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.roles[0",{"_index":910,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.roles[1",{"_index":919,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.roles[2",{"_index":924,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.router.navigate(['/cart",{"_index":718,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.router.navigate(['/home",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["this.router.navigate(['/login",{"_index":160,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["this.router.navigate(['/products",{"_index":472,"title":{},"body":{"components/CartComponent.html":{}}}],["this.setuserblank",{"_index":969,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.user",{"_index":566,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userform",{"_index":341,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userform.get('pass')?.value",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.get('repet_pass')?.value",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.get('rolcito')?.value",{"_index":371,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userform.get('username')?.disable",{"_index":411,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userform.get('username')?.enable",{"_index":396,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userform.get('username')?.value",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.patchvalue",{"_index":400,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userform.reset",{"_index":395,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userlog",{"_index":949,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.username",{"_index":781,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.users",{"_index":946,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users.find(user",{"_index":941,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users.findindex(user",{"_index":938,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users.push(user",{"_index":947,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex",{"_index":968,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].apellidos",{"_index":953,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].calle",{"_index":958,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].comuna",{"_index":966,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].correo",{"_index":962,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].fecha_nac",{"_index":964,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].nombres",{"_index":952,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].numeracion",{"_index":960,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].pass",{"_index":939,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].rol",{"_index":955,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.users[userindex].username",{"_index":954,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["this.userservice.adduser(n_user",{"_index":391,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userservice.getrolbyid(3",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getroles",{"_index":367,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userservice.getuserbyemail(this.userform.get('correo')?.value.trim",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getuserbyid(id",{"_index":398,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userservice.getuserbyusername(username",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.getuserlog",{"_index":567,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.getusers",{"_index":365,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.userservice.getusers().find",{"_index":796,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.userservice.login(this.loginform.get('username')?.value",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.login(this.username",{"_index":791,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.userservice.logout",{"_index":569,"title":{},"body":{"components/NavComponent.html":{}}}],["this.userservice.updatepassword(this.username",{"_index":790,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.userservice.updateuser(form",{"_index":754,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.updateuser(n_user",{"_index":384,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.usuarios",{"_index":364,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["this.validateform",{"_index":782,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.validateform.get('email')?.value",{"_index":793,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.validateform.get('username')?.value",{"_index":792,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.validateformbool",{"_index":799,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.viewcart",{"_index":719,"title":{},"body":{"components/ProductsComponent.html":{}}}],["tienda_front",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["tiendafront",{"_index":1033,"title":{},"body":{"index.html":{}}}],["tienen",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tipo",{"_index":704,"title":{},"body":{"components/ProductsComponent.html":{}}}],["title",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["toda",{"_index":322,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{}}}],["todas",{"_index":326,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["todo",{"_index":303,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{}}}],["todos",{"_index":23,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{}}}],["total",{"_index":641,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["trim",{"_index":147,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["true",{"_index":64,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":257,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["type",{"_index":97,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"interfaces/Product.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":30,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["una",{"_index":21,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["undefined",{"_index":333,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["unicos",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["unit",{"_index":1061,"title":{},"body":{"index.html":{}}}],["universo",{"_index":265,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["uno",{"_index":46,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["update",{"_index":735,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepassword",{"_index":876,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["updatepassword(username",{"_index":897,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["updateproduct",{"_index":597,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["updateproduct(prod",{"_index":612,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["updateproduct(prod:product",{"_index":662,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["updateuser",{"_index":877,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["updateuser(n_user",{"_index":900,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["usagenotes",{"_index":149,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["use",{"_index":1053,"title":{},"body":{"index.html":{}}}],["user",{"_index":337,"title":{"interfaces/User.html":{}},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["user.apellidos",{"_index":402,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["user.calle",{"_index":408,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["user.comuna",{"_index":410,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["user.correo",{"_index":404,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["user.fecha_nac",{"_index":407,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["user.id",{"_index":422,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["user.nombres",{"_index":401,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["user.numeracion",{"_index":409,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["user.pass",{"_index":405,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["user.rol.descripcion",{"_index":423,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["user.rol.id",{"_index":406,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["user.username",{"_index":403,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["userform",{"_index":269,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["userindex",{"_index":937,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["userlog",{"_index":868,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["username",{"_index":345,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserServiceService.html":{}}}],["username:'admin",{"_index":911,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["username:'javiercito",{"_index":920,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["username:'pauli",{"_index":925,"title":{},"body":{"injectables/UserServiceService.html":{}}}],["username:['',validators.required",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["username:this.userform.get('username')?.value",{"_index":377,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":266,"title":{},"body":{"components/AdmUsersComponent.html":{},"injectables/UserServiceService.html":{}}}],["users'},{'name",{"_index":221,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["users.component.css",{"_index":268,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.html",{"_index":267,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts",{"_index":247,"title":{},"body":{"components/AdmUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:136",{"_index":304,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:149",{"_index":306,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:30",{"_index":338,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:31",{"_index":336,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:33",{"_index":334,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:34",{"_index":276,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:74",{"_index":319,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:83",{"_index":302,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:89",{"_index":297,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users.component.ts:99",{"_index":320,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["users/adm",{"_index":246,"title":{},"body":{"components/AdmUsersComponent.html":{},"coverage.html":{}}}],["userservice",{"_index":89,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["userservice:userserviceservice",{"_index":157,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["userserviceservice",{"_index":90,"title":{"injectables/UserServiceService.html":{}},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"coverage.html":{}}}],["uso",{"_index":638,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["usuario",{"_index":250,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{}}}],["usuarios",{"_index":249,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["usuarios(funcionarios",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["utiliza",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{}}}],["utilizado",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["utilizamos",{"_index":295,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["utilizando",{"_index":543,"title":{},"body":{"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["utlizando",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uusuario",{"_index":443,"title":{},"body":{"components/CartComponent.html":{}}}],["valida",{"_index":321,"title":{},"body":{"components/AdmUsersComponent.html":{}}}],["validacion",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validaciones",{"_index":328,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/RegisterComponent.html":{}}}],["validado",{"_index":798,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["validamos",{"_index":277,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validar",{"_index":312,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{}}}],["validateform",{"_index":767,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["validateformbool",{"_index":768,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["validateformbool:boolean",{"_index":780,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["validators",{"_index":132,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":784,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["validators.minlength(8",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":343,"title":{},"body":{"components/AdmUsersComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["valor",{"_index":200,"title":{},"body":{"components/AdmProductsComponent.html":{},"interfaces/Product.html":{}}}],["valor:29990",{"_index":644,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["valor:5000",{"_index":623,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["valor:7990",{"_index":649,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["valor:9000",{"_index":632,"title":{},"body":{"injectables/ProductServiceService.html":{}}}],["valor:['',validators.required",{"_index":165,"title":{},"body":{"components/AdmProductsComponent.html":{}}}],["value",{"_index":116,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":217,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1086,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venta",{"_index":694,"title":{},"body":{"components/ProductsComponent.html":{}}}],["ver",{"_index":52,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["version",{"_index":1038,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":444,"title":{},"body":{"components/CartComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["via",{"_index":1065,"title":{},"body":{"index.html":{}}}],["viewcart",{"_index":692,"title":{},"body":{"components/ProductsComponent.html":{}}}],["vista",{"_index":683,"title":{},"body":{"components/ProductsComponent.html":{}}}],["visualizan",{"_index":724,"title":{},"body":{"components/ProfileComponent.html":{}}}],["visualizar",{"_index":544,"title":{},"body":{"components/NavComponent.html":{}}}],["void",{"_index":102,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/ProductServiceService.html":{},"components/ProductsComponent.html":{},"components/ProfileComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserServiceService.html":{},"miscellaneous/functions.html":{}}}],["volver",{"_index":473,"title":{},"body":{"components/CartComponent.html":{}}}],["válidas",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["y",{"_index":25,"title":{},"body":{"components/AdmProductsComponent.html":{},"components/AdmUsersComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ya",{"_index":698,"title":{},"body":{"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdmProductsComponent.html":{"url":"components/AdmProductsComponent.html","title":"component - AdmProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdmProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/adm-products/adm-products.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la administracion de productos.\nEste componente muestra una lista de todos los productos y tambien el formulario para agregar\nun producto nuevo.\n1.- Cuando iniciamos el componente obtenemos todos los productos desde el servicio.\n2.- con el mismo formulario podemos crear un nuevo producto o actualizar uno existente.\n3.- para actualizar un producto debemos apretar el botón \"VER\" y se cargará nuestro producto en el formulario y se habilitará un botón \"ACTUALIZAR\"\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adm-products\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adm-products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adm-products.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formatNumberToCurrency\n                            \n                            \n                                modificar\n                            \n                            \n                                productoForm\n                            \n                            \n                                productos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProductos\n                            \n                            \n                                limpiarFormularioProducto\n                            \n                            \n                                mostrarProducto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductServiceService, fb: FormBuilder, userService: UserServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/adm-products/adm-products.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProductos\n                        \n                    \n                \n            \n            \n                \ngetProductos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-products/adm-products.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limpiarFormularioProducto\n                        \n                    \n                \n            \n            \n                \nlimpiarFormularioProducto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-products/adm-products.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarProducto\n                        \n                    \n                \n            \n            \n                \nmostrarProducto(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-products/adm-products.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Example :                 formulario para actualizar\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    -El id del producto que queremos mostrar en nuestro \n  formulario para actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-products/adm-products.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-products/adm-products.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Default value : formatNumberToCurrency\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-products/adm-products.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modificar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-products/adm-products.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-products/adm-products.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-products/adm-products.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component , OnInit} from '@angular/core';\n\nimport { ProductServiceService } from '../../service/product/product-service.service';\nimport { Product } from '../../model/product';\nimport { CommonModule } from '@angular/common';\n\n\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NavComponent } from '../nav/nav.component';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { Router } from '@angular/router';\n\n\nfunction formatNumberToCurrency(number: number): string {\n  let formattedNumber = number.toLocaleString('es-CL', { style: 'currency', currency: 'CLP' });\n  formattedNumber = formattedNumber.replace('CLP', '').trim();\n  return formattedNumber;\n}\n/**\n * @description\n * Componente para la administracion de productos.\n * \n * Este componente muestra una lista de todos los productos y tambien el formulario para agregar\n * un producto nuevo.\n *  \n * @usageNotes\n * 1.- Cuando iniciamos el componente obtenemos todos los productos desde el servicio.\n * 2.- con el mismo formulario podemos crear un nuevo producto o actualizar uno existente.\n * 3.- para actualizar un producto debemos apretar el botón \"VER\" y se cargará nuestro producto en el formulario y se habilitará un botón \"ACTUALIZAR\"\n */\n\n@Component({\n  selector: 'app-adm-products',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NavComponent],\n  templateUrl: './adm-products.component.html',\n  styleUrl: './adm-products.component.css'\n})\nexport class AdmProductsComponent {\n\n\n  productoForm: FormGroup;\n\n  modificar: boolean = false;\n\n  //Función para formatear números\n  formatNumberToCurrency = formatNumberToCurrency;\n  productos: Product[] = [];\n\n  ngOnInit(): void {\n    this.getProductos();\n  }\n\n  constructor(\n    private productService: ProductServiceService, \n    private fb : FormBuilder,\n    private userService:UserServiceService,\n    private router : Router\n  ) { \n\n    if(this.userService.getUserLog().username.length === 0 ){\n      this.router.navigate(['/login']);\n    }\n    this.productoForm = this.fb.group({\n      id:[''],\n      nombre:['',Validators.required],\n      descripcion:['',Validators.required],\n      valor:['',Validators.required],\n      img:['',Validators.required]\n    })\n  }\n\n\n  getProductos(){\n    this.productos = this.productService.getProducts();\n  }\n  onSubmit(){\n    if(this.productoForm.valid){\n\n      if(this.modificar){\n        const prod_mod = this.productService.updateProduct(this.productoForm.value);\n        if(!prod_mod){\n          alert('Error al modificar el registro.');\n          return\n        }\n        alert('Producto: '+prod_mod.nombre+' modificado correctamente.');\n        this.getProductos();\n        this.limpiarFormularioProducto();\n        return\n      }\n\n      this.productoForm.get('id')?.setValue(this.productos.length+1, { emitEvent: false });\n      \n      this.productService.addProduct(this.productoForm.value);\n\n      this.getProductos();\n      this.limpiarFormularioProducto();\n\n      // console.log(this.productoForm.value)\n    }\n  }\n  limpiarFormularioProducto(){\n    this.productoForm.reset();\n  }\n  /**\n   * \n   * @param {number} id -El id del producto que queremos mostrar en nuestro \n   *                      formulario para actualizar\n   */\n  mostrarProducto(id:number){\n\n    this.limpiarFormularioProducto();\n    let producto = this.productService.getProductByID(id);\n    this.productService.id_mod = id;\n    if(producto){\n      this.modificar = true;\n      this.productoForm.patchValue(producto);\n    }\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n          Formulario de Registro\n        \n        \n          \n            Nombre\n            \n            \n              El nombre es obligatorio.\n            \n          \n          \n            Descripción\n            \n            \n              La descripción es obligatoria.\n            \n          \n          \n            Valor\n            \n            \n              El valor es obligatorio.\n            \n          \n          \n            Ruta img\n            \n            \n              La ruta de la imagen es obligatoria.\n            \n          \n          \n            \n              Registrar -->\n              Guardar\n              Actualizar\n\n\n            \n            \n              Limpiar Formulario\n            \n          \n        \n      \n      \n    \n    \n        \n            Productos\n         \n        \n            \n                \n                    \n                        ID\n                        Nombre\n                        Descripción\n                        Precio\n                        Accion\n\n                    \n                \n                \n                    \n                        {{producto.id}}\n                        {{producto.nombre}}\n                        {{producto.descripcion}}\n                        {{formatNumberToCurrency(producto.valor)}}\n                         Ver\n                    \n\n                \n\n            \n\n        \n        \n\n         -->\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Formulario de Registro                                      Nombre                                      El nombre es obligatorio.                                            Descripción                                      La descripción es obligatoria.                                            Valor                                      El valor es obligatorio.                                            Ruta img                                      La ruta de la imagen es obligatoria.                                                          Registrar -->              Guardar              Actualizar                                      Limpiar Formulario                                                                      Productos                                                                                         ID                        Nombre                        Descripción                        Precio                        Accion                                                                                                {{producto.id}}                        {{producto.nombre}}                        {{producto.descripcion}}                        {{formatNumberToCurrency(producto.valor)}}                         Ver                                                                         -->    '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdmProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdmUsersComponent.html":{"url":"components/AdmUsersComponent.html","title":"component - AdmUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdmUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/adm-users/adm-users.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un modulo de administracion de usuarios.\nEn este modulo podemos crear un nuevo usuario asignandole cualquiera de los roles que tenemos disponibles\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- en este componente puedes crear nuevos usuarios.\n4.- Puedes ver una lista del universo de usuarios.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adm-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adm-users.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adm-users.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modificar\n                            \n                            \n                                roles\n                            \n                            \n                                userForm\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                limpiarForm\n                            \n                            \n                                mostrarUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/adm-users/adm-users.component.ts:34\n                            \n                        \n\n                \n                    \n                            En el constructor validamos si existe algun usuario loggeado..\n -> de lo contrario redirigimos a login.\n\nGeneramos el objeto de formulario de usuarios.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> FormBuilder para crear el objeto formulario e indicar los campos requeridos.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Servicio de usuarios que nos permite obtener, modificar y agregar usuarios.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Router lo utilizamos para redirigir al componente login cuando no tenemos un usuario loggeado.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene todos los roles disponibles para su seleccion.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene todo el universo de usuarios.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limpiarForm\n                        \n                    \n                \n            \n            \n                \nlimpiarForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarUser\n                        \n                    \n                \n            \n            \n                \nmostrarUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Esta funcion nos permite recibir por parámetro el identificador el usuario.\nValidar si es que existe un usuario con el identificador y mostrar la información\nreferida a este objeto en el formulario HTML.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    -> Identificador que hace referencia al usuario que se requiere ver el Detalle.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/adm-users/adm-users.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Esta funcion obtiene y valida toda la informacion ingresada en el formulario de usuarios.\nsi cumple con todas las validaciones utilizamos el servicio de usuarios para poder agregar o modificar\nel usuario nuevo o un usuario seleccionado respectivamente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                null | undefined\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        modificar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-users/adm-users.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-users/adm-users.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-users/adm-users.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/adm-users/adm-users.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../../model/user';\nimport { Rol } from '../../model/rol';\n\n/**\n * @description\n * Este es un modulo de administracion de usuarios.\n * En este modulo podemos crear un nuevo usuario asignandole cualquiera de los roles que tenemos disponibles \n * \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- en este componente puedes crear nuevos usuarios.\n * 4.- Puedes ver una lista del universo de usuarios.\n */\n@Component({\n  selector: 'app-adm-users',\n  standalone: true,\n  imports: [NavComponent, CommonModule, ReactiveFormsModule],\n  templateUrl: './adm-users.component.html',\n  styleUrl: './adm-users.component.css'\n})\nexport class AdmUsersComponent {\n\n  usuarios : User[]=[];\n  roles : Rol[]=[];\n\n  modificar: boolean = false;\n  userForm : FormGroup;\n\n  /**\n   * En el constructor validamos si existe algun usuario loggeado..\n   *  -> de lo contrario redirigimos a login.\n   * - Generamos el objeto de formulario de usuarios.\n   * \n   * @param fb -> FormBuilder para crear el objeto formulario e indicar los campos requeridos.\n   * @param userService -> Servicio de usuarios que nos permite obtener, modificar y agregar usuarios.\n   * @param router -> Router lo utilizamos para redirigir al componente login cuando no tenemos un usuario loggeado.\n   */\n  constructor(\n    private fb : FormBuilder,\n    private userService:UserServiceService,\n    private router : Router\n  ) { \n\n    if(this.userService.getUserLog().username.length === 0 ){\n      this.router.navigate(['/login']);\n    }\n\n    this.userForm = this.fb.group({\n      nombres: ['', [Validators.required]],\n      apellidos: ['', [Validators.required]],\n      username: ['', [Validators.required]],\n      correo: ['', [Validators.required]],\n      pass: ['', [Validators.required]],\n      rolcito: ['', [Validators.required]],\n      fecha_nac: ['', []],\n      calle: ['', []],\n      numeracion: ['', []],\n      comuna: ['', []],\n      role: ['', []],\n\n    })\n\n\n    \n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.getUsers();\n    this.getRoles();\n  }\n  /**\n   * Funcion que obtiene todo el universo de usuarios.\n   */\n  getUsers(){\n    this.usuarios = this.userService.getUsers();\n  }\n  /**\n   * Funcion que obtiene todos los roles disponibles para su seleccion.\n   */\n  getRoles(){\n    this.roles = this.userService.getRoles();\n  }\n  /**\n   * Esta funcion obtiene y valida toda la informacion ingresada en el formulario de usuarios.\n   * si cumple con todas las validaciones utilizamos el servicio de usuarios para poder agregar o modificar \n   * el usuario nuevo o un usuario seleccionado respectivamente.\n   * \n   * @returns null | undefined\n   */\n  submit(){\n    \n    let n_rol = this.roles.find(rol_e => rol_e.id == this.userForm.get('rolcito')?.value );\n\n    if(n_rol){\n      const n_user :User = {\n        id:this.userService.getUsers().length+1,\n        nombres:this.userForm.get('nombres')?.value,\n        apellidos:this.userForm.get('apellidos')?.value,\n        username:this.userForm.get('username')?.value,\n        rol: n_rol,\n        pass:this.userForm.get('pass')?.value,\n        calle:this.userForm.get('calle')?.value,\n        numeracion:this.userForm.get('numeracion')?.value,\n        correo:this.userForm.get('correo')?.value,\n        fecha_nac:this.userForm.get('fecha_nac')?.value,\n        comuna:this.userForm.get('comuna')?.value\n      }\n\n      if(this.modificar){\n        this.userService.updateUser(n_user);\n        alert('Usuario: '+n_user.nombres+' '+n_user.apellidos+' con ROL: '+n_user.rol.descripcion+' modificado exitosamente!.');\n        this.getUsers();\n        this.limpiarForm();\n        return\n      }\n      this.userService.addUser(n_user);\n      alert('Usuario: '+n_user.nombres+' '+n_user.apellidos+' con ROL: '+n_user.rol.descripcion+' creado exitosamente!.');\n      this.getUsers();\n      this.limpiarForm();\n      return\n    }\n    \n    alert('Error debe seleccionar rol.');\n    return\n  }\n\n  limpiarForm(){\n    this.userForm.reset();\n    this.userForm.get('username')?.enable();\n    this.modificar = false;\n  }\n  \n  /**\n   * Esta funcion nos permite recibir por parámetro el identificador el usuario.\n   * Validar si es que existe un usuario con el identificador y mostrar la información \n   * referida a este objeto en el formulario HTML.\n   * \n   * @param id -> Identificador que hace referencia al usuario que se requiere ver el Detalle.\n   */\n  mostrarUser(id:number){\n\n    let user = this.userService.getUserById(id);\n\n    this.limpiarForm();\n    if(user){\n      this.modificar = true;\n\n      this.userForm.patchValue({\n        nombres: user.nombres,\n        apellidos: user.apellidos,\n        username: user.username,\n        correo: user.correo,\n        pass: user.pass,\n        rolcito: user.rol.id,\n        fecha_nac: user.fecha_nac,\n        calle: user.calle,\n        numeracion: user.numeracion,\n        comuna: user.comuna,\n        role: '',\n      })\n\n      this.userForm.get('username')?.disable();\n      // this.userForm\n    }\n\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            Usuario\n\n        \n        \n            \n                Nombres\n                \n                \n                        El nombre es obligatorio.\n                    \n            \n            \n                Apellidos\n                \n                \n                        El apellido es obligatorio.\n                    \n            \n            \n                Nombre de Usuario\n                \n                \n                        El nombre de usuario es obligatorio.\n                    \n            \n            \n                Email\n                \n                \n                        El correo es obligatorio.\n                    \n            \n            \n                Contraseña\n                \n                \n                        La contraseña es obligatoria.\n                    \n            \n            \n                ROL\n                \n                    {{rol.descripcion}}\n                \n                \n                    El ROL de usuario es obligatorio.\n                \n            \n            \n                Repite Contraseña\n                \n             -->\n            \n                Fecha de Nacimiento\n                \n                \n            \n            \n                Dirección de despacho(Opcional)\n                \n            \n            \n                Calle\n                \n            \n            \n                Numeracion\n                \n            \n            \n                Comuna\n                \n                    ...\n                    Santiago\n                \n            \n            \n                \n                    Guardar\n                    Actualizar\n\n                \n                \n                    Limpiar Formulario\n                \n            \n        \n        \n    \n    \n    \n        \n            Usuarios\n        \n        \n            \n                \n                    \n                        ID\n                        Nombre\n                        ROL\n                        Nombre de Usuario\n                        Correo\n                        Accion\n\n\n                    \n                \n                \n                    \n                        {{user.id}}\n                        {{user.nombres}} {{user.apellidos}}\n                        {{user.rol.descripcion}}\n                        {{user.username}}\n                        {{user.correo}}\n                         Ver\n                    \n                \n\n            \n\n        \n        \n\n         -->\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Usuario                                            Nombres                                                        El nombre es obligatorio.                                                            Apellidos                                                        El apellido es obligatorio.                                                            Nombre de Usuario                                                        El nombre de usuario es obligatorio.                                                            Email                                                        El correo es obligatorio.                                                            Contraseña                                                        La contraseña es obligatoria.                                                            ROL                                    {{rol.descripcion}}                                                    El ROL de usuario es obligatorio.                                                        Repite Contraseña                             -->                            Fecha de Nacimiento                                                                        Dirección de despacho(Opcional)                                                        Calle                                                        Numeracion                                                        Comuna                                    ...                    Santiago                                                                            Guardar                    Actualizar                                                    Limpiar Formulario                                                                            Usuarios                                                                                        ID                        Nombre                        ROL                        Nombre de Usuario                        Correo                        Accion                                                                                                {{user.id}}                        {{user.nombres}} {{user.apellidos}}                        {{user.rol.descripcion}}                        {{user.username}}                        {{user.correo}}                         Ver                                                                         -->    '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdmUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                                NavComponent\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tienda_front'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\nimport { NavComponent } from './components/nav/nav.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports:  [CommonModule, RouterOutlet, RouterLink, RouterLinkActive, NavComponent, ReactiveFormsModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'tienda_front';\n}\n\n    \n\n    \n        \n\n -->\n\n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->    '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cart.html":{"url":"interfaces/Cart.html","title":"interface - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/cart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Product } from \"./product\";\n\nexport interface Cart {\n    id: number;\n    products : Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente para mostrar y mantener el carrito de cada uusuario.\nuna vez cerrada la sesion del usuario se limpia el carrito.\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- en este componente puedes ver todos los productos que seleccionaste para tu carrito.\n4.- este componente requiere de los servicios de productos para saber el universo de productos.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formatNumberToCurrency\n                            \n                            \n                                productos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToProducts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                quitarProducto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToProducts\n                        \n                    \n                \n            \n            \n                \nbackToProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarProducto\n                        \n                    \n                \n            \n            \n                \nquitarProducto(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Este metodo es para eliminar el producto deseado de la lista de carrito.\nrecibe como parametro el identificador del producto que requiere eliminar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    -> Identificador que hace referencia al producto seleccionado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Default value : formatNumberToCurrency\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\nimport { Product } from '../../model/product';\nimport { ProductServiceService } from '../../service/product/product-service.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\nfunction formatNumberToCurrency(number: number): string {\n  let formattedNumber = number.toLocaleString('es-CL', { style: 'currency', currency: 'CLP' });\n  formattedNumber = formattedNumber.replace('CLP', '').trim();\n  return formattedNumber;\n}\n\n/**\n * @description\n * Este es un componente para mostrar y mantener el carrito de cada uusuario.\n * una vez cerrada la sesion del usuario se limpia el carrito. \n * \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- en este componente puedes ver todos los productos que seleccionaste para tu carrito.\n * 4.- este componente requiere de los servicios de productos para saber el universo de productos.\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [NavComponent, CommonModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.css'\n})\nexport class CartComponent {\n\n  productos : Product [] =[];\n  //Función para formatear números\n  formatNumberToCurrency = formatNumberToCurrency;\n  constructor(\n    private productService: ProductServiceService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.productos = this.productService.getCarrito();\n  }\n  /**\n   * Este metodo es para eliminar el producto deseado de la lista de carrito.\n   * recibe como parametro el identificador del producto que requiere eliminar\n   * \n   * @param id -> Identificador que hace referencia al producto seleccionado.\n   * @returns \n   */\n  quitarProducto(id:number){\n    if(this.productos.length ===0){\n      return\n    }\n\n    this.productService.deleteProductCarrito(id);\n    this.productos = this.productService.getCarrito();\n    // this.productos = this.productos.filter(producto => producto.id === id);\n  }\n\n  backToProducts(){\n    this.router.navigate(['/products'])\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n          Volver a Productos\n    \n    \n    \n        \n            Carrito de compras\n        \n        \n            \n                \n                    \n                        Nombre\n                        Descripción\n                        Precio\n                        Accion\n\n                    \n                \n                \n                    \n                    \n                        {{producto.nombre}}\n                        {{producto.descripcion}}\n                        {{formatNumberToCurrency(producto.valor)}}\n                         Quitar\n                    \n                \n\n            \n            Sin productos :(\n\n        \n        \n\n         -->\n    \n\n    \n    \n       \n       \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Volver a Productos                                Carrito de compras                                                                                        Nombre                        Descripción                        Precio                        Accion                                                                                                                    {{producto.nombre}}                        {{producto.descripcion}}                        {{formatNumberToCurrency(producto.valor)}}                         Quitar                                                            Sin productos :(                         -->                              '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n        Bienvenido a GameStore App\n        ¡Estamos encantados de tenerte aquí!\n        Registrate como cliente o inicia sesión y podrás obtener acceso a nuestra amplia gama de productos y servicios. \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Bienvenido a GameStore App        ¡Estamos encantados de tenerte aquí!        Registrate como cliente o inicia sesión y podrás obtener acceso a nuestra amplia gama de productos y servicios.     '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente para realizar el inicio de sesión de usuario a nuestra app.\nLos datos requeridos son :\n @param {string} username -> referenciando al nombre de usuario.\n @param {string} password -> referenciando a la contraseña que ingresó el usuario al momento de registrarse.\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- Este componente muestra un formulario html con dos input.\n     donde puedes ingresar tu nombre de usuario y contraseña.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Metodo para llamar al servicio de usuarios y preguntar si el usuario ingresó correctamente sus credenciales.\nutiliza el loginForm\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:35\n                        \n                    \n\n            \n                \n                    Utilizado para el ingreso de las credenciales del usuario en la funcion login().\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\n\nimport { FormBuilder, FormGroup , ReactiveFormsModule, Validators} from '@angular/forms';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { Router } from '@angular/router';\nimport { NavComponent } from '../nav/nav.component';\n\n/**\n * @description\n * Este es un componente para realizar el inicio de sesión de usuario a nuestra app.\n * Los datos requeridos son :\n *  @param {string} username -> referenciando al nombre de usuario.\n *  @param {string} password -> referenciando a la contraseña que ingresó el usuario al momento de registrarse.\n *  \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- Este componente muestra un formulario html con dos input.\n *      donde puedes ingresar tu nombre de usuario y contraseña.\n */\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NavComponent],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n\n  /**\n   * Utilizado para el ingreso de las credenciales del usuario en la funcion login().\n   */\n  loginForm !:FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserServiceService,\n    private router:Router\n  ){}\n\n  ngOnInit(): void {\n    \n    this.loginForm = this.fb.group({\n      username:['',Validators.required],\n      password:['',[Validators.required, Validators.minLength(8)]]\n    })\n    \n  }\n  /**\n   * Metodo para llamar al servicio de usuarios y preguntar si el usuario ingresó correctamente sus credenciales.\n   * utiliza el loginForm\n   */\n  login() {\n\n    if(this.loginForm.valid){\n      const user = this.userService.login(this.loginForm.get('username')?.value, this.loginForm.get('password')?.value);\n      if (user) {\n        \n        this.router.navigate(['/home']);\n        alert('Inicio de sesión exitoso: '+ user.nombres+' '+user.apellidos);\n      } else {\n        alert('Credenciales inválidas. Inicio de sesión fallido.');\n      }\n    }\n\n\n    \n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n        \n            Inicia Sesión\n        \n        \n                \n                    Nombre de Usuario\n                    \n                    \n                        El nombre de usuario es obligatorio.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es obligatoria.\n                    \n                            \n        \n        \n            Acceder           \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Inicia Sesión                                                    Nombre de Usuario                                                                El nombre de usuario es obligatorio.                                                                        Contraseña                                                                La contraseña es obligatoria.                                                                            Acceder                       '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav/nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente que muestra el menu completo de nuestra aplicación.\nEs llamado en cada componente. esto por que necesitamos validar en cada componente el usuario que esta loggeado.\n1.- importa este componente en tu modulo principal.\n2.- muestra el componente utilizando el selector  en el modulo principal.\n3.- puedes visualizar el menú en cada componente donde lo importes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rol\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserServiceService, productService: ProductServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav/nav.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> servicio de usuarios donde obtenemos metodos para agregar, modificar y listar usuarios.\n\n                                                        \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> servicio de productos donde obtenemos metodos para agregar, modificar y listar productos.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/nav/nav.component.ts:71\n                        \n                    \n\n\n            \n                \n                        metodo que es llamado por el botón \"CERRAR SESION\" del menú.\nobjetivo principal es eliminar el usuario de la sesion en el servicio de usuarios.\ny limpiar el carrito en el servicio de productos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/nav/nav.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    descripcion:'',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav/nav.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rol,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav/nav.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { User } from '../../model/user';\nimport { Rol } from '../../model/rol';\nimport { ProductServiceService } from '../../service/product/product-service.service';\n\n\n/**\n * @description\n * Este es un componente que muestra el menu completo de nuestra aplicación.\n * Es llamado en cada componente. esto por que necesitamos validar en cada componente el usuario que esta loggeado.\n *  \n * @usageNotes\n * 1.- importa este componente en tu modulo principal.\n * 2.- muestra el componente utilizando el selector  en el modulo principal.\n * 3.- puedes visualizar el menú en cada componente donde lo importes.\n */\n\n\n\n@Component({\n  selector: 'app-nav',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, RouterLink, RouterLinkActive],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.css'\n})\nexport class NavComponent {\n  public rol:Rol = {\n    id:0,\n    descripcion:'',\n  }\n  public user : User = {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rol,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  };\n  /**\n   * \n   * @param userService -> servicio de usuarios donde obtenemos metodos para agregar, modificar y listar usuarios.\n   * @param productService -> servicio de productos donde obtenemos metodos para agregar, modificar y listar productos.\n   */\n  constructor(\n    private userService: UserServiceService,\n    private productService: ProductServiceService\n  ){}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n\n    this.user = this.userService.getUserLog();\n    \n  }\n  /**\n   * metodo que es llamado por el botón \"CERRAR SESION\" del menú.\n   * objetivo principal es eliminar el usuario de la sesion en el servicio de usuarios.\n   * y limpiar el carrito en el servicio de productos.\n   */\n  logout() {\n    // Lógica para cerrar sesión\n    this.userService.logout();\n    this.productService.cleanCarrito();\n    // Redirigir a la página de inicio de sesión\n  }\n  \n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n                    Inicio\n                    Productos\n                    Carrito\n\n                    \n                        \n                            Administrador\n                        \n                        \n                            Mantenedores\n                            \n                            Producto\n                            Usuario\n                        \n                    \n                    Recuperar Contraseña\n                    Login\n                    Registrar -->\n                \n                \n                    \n                        \n                            Usuario\n                        \n                        \n                            Login\n                            Registrar\n                            \n                            Recuperar Contraseña\n\n                        \n                    \n                \n                \n                    \n                        \n                            {{user.nombres + ' ' + user.apellidos}}\n                        \n                        \n                            {{user.rol.descripcion}}\n                            \n                            Configuración de perfil\n                            Cerrar sesión\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            Inicio                    Productos                    Carrito                                                                        Administrador                                                                            Mantenedores                                                        Producto                            Usuario                                                                Recuperar Contraseña                    Login                    Registrar -->                                                                                                        Usuario                                                                            Login                            Registrar                                                        Recuperar Contraseña                                                                                                                                                    {{user.nombres + \\' \\' + user.apellidos}}                                                                            {{user.rol.descripcion}}                                                        Configuración de perfil                            Cerrar sesión                                                                                    '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\n\n@Component({\n  selector: 'app-page-not-found',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        \nNOT FOUND\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'NOT FOUND'\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            img\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            valor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n    id: number;\n    nombre : string;\n    descripcion: string;\n    valor : number;\n    img: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductServiceService.html":{"url":"injectables/ProductServiceService.html","title":"injectable - ProductServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product/product-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                carrito\n                            \n                            \n                                id_mod\n                            \n                            \n                                    Private\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarrito\n                            \n                            \n                                addProduct\n                            \n                            \n                                cleanCarrito\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                deleteProductCarrito\n                            \n                            \n                                getCarrito\n                            \n                            \n                                getProductByID\n                            \n                            \n                                getProducts\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/product/product-service.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCarrito\n                        \n                    \n                \n            \n            \n                \naddCarrito(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanCarrito\n                        \n                    \n                \n            \n            \n                \ncleanCarrito()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProductCarrito\n                        \n                    \n                \n            \n            \n                \ndeleteProductCarrito(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCarrito\n                        \n                    \n                \n            \n            \n                \ngetCarrito()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Product[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductByID\n                        \n                    \n                \n            \n            \n                \ngetProductByID(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Product | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Product[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(prod: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product/product-service.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prod\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Product | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        carrito\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product/product-service.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product/product-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id:1,\n      nombre:'Iphone 6 Case',\n      descripcion:'\"phone case\" para teléfono iphone',\n      valor:5000,\n      img:\"carcasa_iphone_6.jpg\"\n    },\n    {\n      id:2,\n      nombre:'Thanos',\n      descripcion:'Articulo impreso en 3D con filamento ABS.',\n      valor:9000,\n      img:\"thanos_imp_3d.jpg\"\n    },\n    {\n      id:3,\n      nombre:'Taladro',\n      descripcion:'Taladro percutor uso hogar marca TOTAL. Garantía 6 meses',\n      valor:29990,\n      img:\"taladro.webp\"\n    },\n    {\n      id:4,\n      nombre:'Soporte teléfono',\n      descripcion:'Soporte impreso en 3D con filamento ABS.',\n      valor:7990,\n      img:\"soporte_telefono.jpg\"\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product/product-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Product } from '../../model/product';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\n\n  id_mod :number = 0;\n\n  private products: Product[]=[\n    {\n      id:1,\n      nombre:'Iphone 6 Case',\n      descripcion:'\"phone case\" para teléfono iphone',\n      valor:5000,\n      img:\"carcasa_iphone_6.jpg\"\n    },\n    {\n      id:2,\n      nombre:'Thanos',\n      descripcion:'Articulo impreso en 3D con filamento ABS.',\n      valor:9000,\n      img:\"thanos_imp_3d.jpg\"\n    },\n    {\n      id:3,\n      nombre:'Taladro',\n      descripcion:'Taladro percutor uso hogar marca TOTAL. Garantía 6 meses',\n      valor:29990,\n      img:\"taladro.webp\"\n    },\n    {\n      id:4,\n      nombre:'Soporte teléfono',\n      descripcion:'Soporte impreso en 3D con filamento ABS.',\n      valor:7990,\n      img:\"soporte_telefono.jpg\"\n    }\n  ]\n\n  private carrito : Product[]=[];\n\n  constructor() { }\n\n  getProducts():Product[]{\n    return this.products;\n  }\n  addProduct(product:Product){\n    this.products.push(product);\n  }\n  getProductByID(id:number):Product|undefined{\n    return this.products.find(prod => prod.id === id);\n  }\n  deleteProduct(id:number):void{\n    this.products = this.products.filter(prod => prod.id !== id);\n  }\n\n  updateProduct(prod:Product): Product | undefined{\n\n    const prodIndex = this.products.findIndex(producto => producto.id === this.id_mod);\n\n    if (prodIndex !== -1) {\n    \n      this.products[prodIndex].valor        = prod.valor;\n      this.products[prodIndex].nombre       = prod.nombre;\n      this.products[prodIndex].descripcion  = prod.descripcion;\n      this.products[prodIndex].img          = prod.img;\n\n      let producto = this.products[prodIndex];\n      this.id_mod =0;\n      return producto;\n    }\n    return undefined;\n  }\n\n  getCarrito():Product[]{\n    return this.carrito;\n  }\n  addCarrito(product:Product){\n    this.carrito.push(product);\n  }\n  deleteProductCarrito(id:number):void{\n    this.carrito = this.carrito.filter(prod => prod.id !== id);\n  }\n  cleanCarrito():void{\n    this.carrito = [];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/products/products.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente muestra una vista para todo usuario (conocido / desconocido) de nuestra aplicación.\nmuestra el universo de productos disponibles para agregar al carrito de cada usuario.\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- Este componente muestra un HTML con una grilla que contiene toda la informacion relevante\n     de cada producto\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                NavComponent\n                            NgOptimizedImage\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./products.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formatNumberToCurrency\n                            \n                            \n                                productos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                isInCart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                viewCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/products/products.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Servicio de productos para obtener todos los productos disponibles para la venta.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Utilizamos el objeto router para redirigir al carrito cada vez que agregamos un producto al carrito.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/products/products.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    -> identificador del producto seleccionado para agregar al carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                -> null | undefined ( ya que la funcion principal es redirigir al carrito cuando se agrega un producto.)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInCart\n                        \n                    \n                \n            \n            \n                \nisInCart(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/products/products.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Esta función llama al servicio de productos para preguntar si el producto seleccionado existe en el carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    -> identificador del producto\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                -> Retorna un objeto de tipo producto cuando el producto se encuentra en el carrito.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/products/products.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewCart\n                        \n                    \n                \n            \n            \n                \nviewCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/products/products.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Default value : formatNumberToCurrency\n                    \n                \n                    \n                        \n                                Defined in src/app/components/products/products.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/products/products.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ProductServiceService } from '../../service/product/product-service.service';\n\nimport { Product } from '../../model/product';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { NavComponent } from '../nav/nav.component';\nimport { Router } from '@angular/router';\n\nfunction formatNumberToCurrency(number: number): string {\n  let formattedNumber = number.toLocaleString('es-CL', { style: 'currency', currency: 'CLP' });\n  formattedNumber = formattedNumber.replace('CLP', '').trim();\n  return formattedNumber;\n}\n\n/**\n * @description\n * Este es un componente muestra una vista para todo usuario (conocido / desconocido) de nuestra aplicación.\n * muestra el universo de productos disponibles para agregar al carrito de cada usuario.\n *  \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- Este componente muestra un HTML con una grilla que contiene toda la informacion relevante \n *      de cada producto \n */\n\n@Component({\n  selector: 'app-products',\n  standalone: true,\n  imports: [ CommonModule, NavComponent, NgOptimizedImage],\n  templateUrl: './products.component.html',\n  styleUrl: './products.component.css'\n})\nexport class ProductsComponent {\n\n\n  //Función para formatear números\n  formatNumberToCurrency = formatNumberToCurrency;\n  productos: Product[] = [];\n\n  \n  /**\n   * \n   * @param productService -> Servicio de productos para obtener todos los productos disponibles para la venta.\n   * @param router -> Utilizamos el objeto router para redirigir al carrito cada vez que agregamos un producto al carrito.\n   */\n  constructor(\n    private productService: ProductServiceService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n    this.productos = this.productService.getProducts();\n  }\n  /**\n   * Esta función llama al servicio de productos para preguntar si el producto seleccionado existe en el carrito.\n   * \n   * @param id -> identificador del producto \n   * @returns -> Retorna un objeto de tipo producto cuando el producto se encuentra en el carrito.\n   */\n  isInCart(id:number){\n    return this.productService.getCarrito().some(item=> item.id === id);\n  }\n  /**\n   * \n   * @param id -> identificador del producto seleccionado para agregar al carrito\n   * @returns -> null | undefined ( ya que la funcion principal es redirigir al carrito cuando se agrega un producto.)\n   */\n  addToCart(id:number){\n    if(!id){\n      alert('falta seleccionar el producto');\n    }\n    let producto = this.productos.find(prod => prod.id === id);\n\n    if(producto){\n      this.productService.addCarrito(producto);\n      alert('Producto: '+producto.nombre+' Agregado al carrito!');\n      // this.router.navigate(['/cart']);\n      this.viewCart();\n      return\n    }\n    alert('No se encontró producto');\n    return\n  }\n  viewCart(){\n    this.router.navigate(['/cart']);\n  }\n}\n\n    \n\n    \n        \n\n    Productos \n    \n        \n            \n            {{producto.nombre}}\n            {{producto.descripcion}}\n            {{formatNumberToCurrency(producto.valor)}}\n            Comprar\n            Ver Carrito\n        \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Productos                                     {{producto.nombre}}            {{producto.descripcion}}            {{formatNumberToCurrency(producto.valor)}}            Comprar            Ver Carrito                            '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente que muestra un formulario HTML donde se visualizan los datos personales del usuario que inició sesión.\nUtilizamos este componente solo para la actualizacion de informacion personal del mismo usuario.\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- Este componente es capaz de actualizar los datos personales del usuario loggeado.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                profileForm\n                            \n                            \n                                    Public\n                                rol\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserServiceService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Servicio de usuario: Utilizamos el servicio para obtener todos los datos el usuario loggeado.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> FormBuilder lo utilizamos para crear el objeto del formulario del usuario.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                -> Router lo utilizamos para redirigir al login en caso de que no exista usuario loggeado.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:104\n                        \n                    \n\n\n            \n                \n                        La función principal de este metodo:\n -> Utilizamos el servicio de usuarios para actualizar los datos del usuario loggeado.\n -> Validamos que el usuario loggeado exista en nuestra base de datos de usuarios.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                -> Retorna NULL | undefined\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    descripcion:'',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rol,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\nimport { CommonModule } from '@angular/common';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { User } from '../../model/user';\nimport { Rol } from '../../model/rol';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n\n/**\n * @description\n * Este es un componente que muestra un formulario HTML donde se visualizan los datos personales del usuario que inició sesión.\n * Utilizamos este componente solo para la actualizacion de informacion personal del mismo usuario.\n *  \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- Este componente es capaz de actualizar los datos personales del usuario loggeado.\n */\n\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [NavComponent, CommonModule, ReactiveFormsModule],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.css'\n})\nexport class ProfileComponent {\n  public rol:Rol = {\n    id:0,\n    descripcion:'',\n  }\n  public user : User = {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rol,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  };\n\n  profileForm !: FormGroup;\n\n  /**\n   * \n   * @param userService -> Servicio de usuario: Utilizamos el servicio para obtener todos los datos el usuario loggeado.\n   * @param fb -> FormBuilder lo utilizamos para crear el objeto del formulario del usuario.\n   * @param router -> Router lo utilizamos para redirigir al login en caso de que no exista usuario loggeado.\n   */\n  constructor(\n    private userService: UserServiceService,\n    private fb : FormBuilder,\n    private router: Router\n  ){\n\n  \n\n    this.profileForm = this.fb.group({\n      nombres: ['', [Validators.required]],\n      apellidos: ['', [Validators.required]],\n      username: ['', [Validators.required]],\n      correo: ['', [Validators.required]],\n      pass: ['', [Validators.required]],\n      repet_pass: ['', [Validators.required]],\n      fecha_nac: ['', [Validators.required]],\n      calle: ['', []],\n      numeracion: ['', []],\n      comuna: ['', []],\n    });\n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n\n    if(this.user.username.length === 0){\n      this.router.navigate(['/login']);\n    }\n\n    this.user = this.userService.getUserLog();\n\n    this.profileForm.patchValue(this.user);\n    this.profileForm.get('username')?.disable();\n    \n    \n\n  }\n  /**\n   * La función principal de este metodo:\n   *  -> Utilizamos el servicio de usuarios para actualizar los datos del usuario loggeado.\n   *  -> Validamos que el usuario loggeado exista en nuestra base de datos de usuarios.\n   * \n   * @returns -> Retorna NULL | undefined\n   */\n  update(){\n    this.profileForm.get('username')?.enable();\n    let form : User = this.profileForm.value;\n    this.profileForm.get('username')?.disable();\n\n    // console.log(form)\n\n    const res = this.userService.updateUser(form);\n\n    if(res !== undefined){\n\n      let n_user : User = res;\n      alert('Usuario actualizado correctamente');\n\n      this.profileForm.reset();\n  \n      this.profileForm.patchValue(n_user);\n      return\n    }\n    alert('Error al actualizar');\n    return\n  }\n \n\n\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n            Perfil\n            {{user.nombres+' '+user.apellidos}}\n\n            {{user.rol.descripcion}}\n        \n        \n            \n                Nombres\n                \n            \n            \n                Apellidos\n                \n            \n            \n                Nombre de Usuario\n                \n            \n            \n                Email\n                \n            \n            \n                Contraseña\n                \n            \n            \n                Repite Contraseña\n                \n             -->\n            \n                Fecha de Nacimiento\n                \n            \n            \n                Dirección de despacho(Opcional)\n                \n            \n            \n                Calle\n                \n            \n            \n                Numeracion\n                \n            \n            \n                Comuna\n                \n                    ...\n                    Santiago\n                \n            \n            \n                \n                    Actualizar\n                \n                \n                    Limpiar Formulario\n                \n            \n        \n        \n    \n\n\n\n\n\n\n\n\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Perfil            {{user.nombres+\\' \\'+user.apellidos}}            {{user.rol.descripcion}}                                            Nombres                                                        Apellidos                                                        Nombre de Usuario                                                        Email                                                        Contraseña                                                        Repite Contraseña                             -->                            Fecha de Nacimiento                                                        Dirección de despacho(Opcional)                                                        Calle                                                        Numeracion                                                        Comuna                                    ...                    Santiago                                                                            Actualizar                                                    Limpiar Formulario                                                        '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recover-password/recover-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./recover-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                recoverPassForm\n                            \n                            \n                                username\n                            \n                            \n                                validateForm\n                            \n                            \n                                validateFormbool\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onSubmitRecover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserServiceService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recover-password/recover-password.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover-password/recover-password.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover-password/recover-password.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitRecover\n                        \n                    \n                \n            \n            \n                \nonSubmitRecover()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recover-password/recover-password.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoverPassForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFormbool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recover-password/recover-password.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NavComponent } from '../nav/nav.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recover-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NavComponent],\n  templateUrl: './recover-password.component.html',\n  styleUrl: './recover-password.component.css'\n})\nexport class RecoverPasswordComponent {\n  email: string = '';\n  loading: boolean = false;\n  message: string = '';\n  validateForm  !:FormGroup;\n\n  username : string = '';\n  recoverPassForm !: FormGroup;\n\n  validateFormbool:boolean = false;\n\n\n  constructor(\n    private userService: UserServiceService,\n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.username = '';\n    \n    this.validateForm = this.fb.group({\n      username:['',Validators.required],\n      email:['',[Validators.required, Validators.email]]\n    })\n\n    this.recoverPassForm = this.fb.group({\n      pass:['',Validators.required]\n    })\n    \n  }\n  onSubmitRecover(){\n    let password = this.recoverPassForm.get('pass')?.value;\n\n    if(!password){\n      alert('Falta indicar la contraseña nueva');\n      return\n    }\n    this.userService.updatePassword(this.username, password);\n\n    const user = this.userService.login(this.username, password);\n      if (user) {\n        \n        this.router.navigate(['/home']);\n        alert('Inicio de sesión exitoso: '+ user.nombres+' '+user.apellidos);\n      } else {\n        alert('Credenciales inválidas. Inicio de sesión fallido.');\n      }\n  }\n\n  onSubmit() {\n    this.username = this.validateForm.get('username')?.value;\n    let email = this.validateForm.get('email')?.value;\n\n    if(this.username.trim().length === 0){\n      alert('Falta indicar el nombre de usuario (username)');\n      return\n    }\n    if(email.trim().length ===0){\n      alert('Falta indicar un Correo.');\n      return\n    }\n    \n    const user = this.userService.getUsers().find(\n      user => user.username === this.username\n              && user.correo === email\n    )\n\n    if(!user){\n      alert('No existe usuario con el nombre de usuario: '+this.username+' y el correo: '+email);\n      return\n    }\n\n    alert('Usuario validado correctamente.');\n\n    this.validateFormbool = true;\n    // setTimeout(() => {\n\n    //   const user = this.userService.getUsers().find(\n    //     user => user.username === username\n    //             && user.correo === email\n    //   )\n\n    //   if(!user){\n    //     alert('No existe usuario con el nombre de usuario: '+username+' y el correo: '+email);\n    //     return\n    //   }\n\n    //   this.message = '';\n    //   this.loading = false;\n    // }, 2000);\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n        \n            Recupera tu contraseña\n        \n        \n                \n                    Nombre de Usuario\n                    \n                    \n                        El nombre de usuario es obligatorio.\n                    \n                \n                \n                    Correo\n                    \n                    \n                        El correo es obligatorio.\n                    \n                            \n        \n        \n            Comprobar           \n        \n    \n    \n\n\n    \n\n        \n            Ingresa nueva contraseña\n        \n        \n       \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es obligatoria.\n                    \n                            \n        \n        \n            Recuperar           \n        \n    \n    \n\n\n\n    Loading...\n\n\n\n    {{ message }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recupera tu contraseña                                                    Nombre de Usuario                                                                El nombre de usuario es obligatorio.                                                                        Correo                                                                El correo es obligatorio.                                                                            Comprobar                                                   Ingresa nueva contraseña                                                           Contraseña                                                                La contraseña es obligatoria.                                                                            Recuperar                               Loading...    {{ message }}'\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este es un componente que muestra un formulario HTML donde se pueden ingresar los datos requeridos para crear un nuevo cliente.\nEste formulario no sirve para crear administradores o usuarios (funcionarios) de la aplicación.\n-> Puede crear solo clientes.\n-> Para crear usuarios(funcionarios) o administradores debe ser desde el menu de administracion de usuarios.\n1.- importa este componente en tu modulo principal\n2.- configura el routing para llamar correctamente a este componente.\n3.- Este componente lo utilizamos para que usuarios que no existen en nuestra app se puedan registrar como Clientes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                limpiarForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        limpiarForm\n                        \n                    \n                \n            \n            \n                \nlimpiarForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion que permite limpiar el formulario utilizado para la creacion de nuevos usuarios.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Esta función retorna null o undefined ya que el objetivo principal es:\n -> utlizando el servicio de usuarios podemos validar si existen usuarios con algunos datos relevantes ingresados en el formulario\n     como por ejemplo:\n       > username\n       > email\n -> estos datos tienen que ser unicos en nuestra base de datos ya que con ellos realizamos la validacion para la recuperacion de contraseña.\n -> validamos que las contraseñas ingresadas sean válidas e iguales.\n -> una vez realizadas y aprobadas todas las validaciones podemos generar el nuevo registro de usuario.\n -> y lo guardamos utilizando el mismo servicio de usuarios.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                -> Null | undefined\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavComponent } from '../nav/nav.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UserServiceService } from '../../service/user/user-service.service';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../../model/user';\n\n\n/**\n * @description\n * Este es un componente que muestra un formulario HTML donde se pueden ingresar los datos requeridos para crear un nuevo cliente.\n * Este formulario no sirve para crear administradores o usuarios (funcionarios) de la aplicación.\n * -> Puede crear solo clientes.\n * -> Para crear usuarios(funcionarios) o administradores debe ser desde el menu de administracion de usuarios.\n *  \n * @usageNotes\n * 1.- importa este componente en tu modulo principal\n * 2.- configura el routing para llamar correctamente a este componente.\n * 3.- Este componente lo utilizamos para que usuarios que no existen en nuestra app se puedan registrar como Clientes.\n */\n\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [NavComponent, ReactiveFormsModule, CommonModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent {\n\n  userForm : FormGroup;\n\n  constructor(\n    private fb : FormBuilder,\n    private userService:UserServiceService,\n    private router : Router\n  ) { \n\n    // if(this.userService.getUserLog().username.length === 0 ){\n    //   this.router.navigate(['/login']);\n    // }\n\n    this.userForm = this.fb.group({\n      nombres: ['', [Validators.required]],\n      apellidos: ['', [Validators.required]],\n      username: ['', [Validators.required]],\n      correo: ['', [Validators.required]],\n      pass: ['', [Validators.required]],\n      repet_pass: ['', [Validators.required]],\n      rol: ['', []],\n      fecha_nac: ['', [Validators.required]],\n      calle: ['', []],\n      numeracion: ['', []],\n      comuna: ['', []],\n    })\n  }\n  \n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.limpiarForm();\n  }\n\n  /**\n   * Esta función retorna null o undefined ya que el objetivo principal es:\n   *  -> utlizando el servicio de usuarios podemos validar si existen usuarios con algunos datos relevantes ingresados en el formulario\n   *      como por ejemplo:\n   *        > username\n   *        > email\n   *  -> estos datos tienen que ser unicos en nuestra base de datos ya que con ellos realizamos la validacion para la recuperacion de contraseña.\n   *  -> validamos que las contraseñas ingresadas sean válidas e iguales.\n   *  -> una vez realizadas y aprobadas todas las validaciones podemos generar el nuevo registro de usuario.\n   *  -> y lo guardamos utilizando el mismo servicio de usuarios.\n   * \n   * @returns -> Null | undefined\n   */\n  submit(){\n    if(!this.userForm.valid){\n      return\n    }\n\n    let username = this.userForm.get('username')?.value;\n    let pass = this.userForm.get('pass')?.value;\n    let repet_pass = this.userForm.get('repet_pass')?.value;\n\n    if(username.trim().length ==0){\n      alert('debe indicar un nombre de usuario.');\n      return\n    }\n\n    let user = this.userService.getUserByUsername(username);\n\n    if(user){\n      alert('Ya existe un usuario con el nombre de usuario: '+user.username+'.');\n      return\n    }\n\n    user = this.userService.getUserByEmail(this.userForm.get('correo')?.value.trim());\n\n    if(user){\n      alert('Ya existe un usuario con el correo : '+user.correo+'.');\n      return\n    }\n\n    if(pass.trim().length == 0 || repet_pass.trim().length == 0){\n      alert('Debe indicar la contraseña y repetirla');\n      return\n    }\n\n    if(pass.trim() !== repet_pass.trim()){\n      alert('Las contraseñas deben ser iguales.');\n      return\n    }\n\n    let rol = this.userService.getRolById(3); // id cliente\n    if(rol){\n      const n_user :User = {\n        id:this.userService.getUsers().length+1,\n        nombres:this.userForm.get('nombres')?.value,\n        apellidos:this.userForm.get('apellidos')?.value,\n        username:this.userForm.get('username')?.value,\n        rol: rol,\n        pass:this.userForm.get('pass')?.value,\n        calle:this.userForm.get('calle')?.value,\n        numeracion:this.userForm.get('numeracion')?.value,\n        correo:this.userForm.get('correo')?.value,\n        fecha_nac:this.userForm.get('fecha_nac')?.value,\n        comuna:this.userForm.get('comuna')?.value\n      }\n      this.userService.addUser(n_user);\n\n      alert('Usuario: '+n_user.nombres+' '+n_user.apellidos+' creado exitosamente!');\n      this.limpiarForm();\n      return\n    }\n  }\n\n  /**\n   * Funcion que permite limpiar el formulario utilizado para la creacion de nuevos usuarios.\n   */\n  limpiarForm(){\n    this.userForm.reset();\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n            Registrate!\n            Formulario de Registro\n\n        \n        \n            \n                Nombres\n                \n                \n                        El nombre es obligatorio.\n                    \n            \n            \n                Apellidos\n                \n                \n                        El apellido es obligatorio.\n                    \n            \n            \n                Nombre de Usuario\n                \n                \n                        El nombre de usuario es obligatorio.\n                    \n            \n            \n                Email\n                \n                \n                        El correo es obligatorio.\n                    \n            \n            \n                Contraseña\n                \n                \n                        La contraseña es obligatoria.\n                    \n            \n            \n                Repite Contraseña\n                \n                \n                    La contraseña es obligatoria.\n                \n            \n            \n                Fecha de Nacimiento\n                \n                \n                    La fecha de nacimiento es obligatoria.\n                \n            \n            \n                Dirección de despacho(Opcional)\n                \n            \n            \n                Calle\n                \n            \n            \n                Numeracion\n                \n            \n            \n                Comuna\n                \n                    ...\n                    Santiago\n                \n            \n            \n                \n                    Registrar\n                \n                \n                    Limpiar Formulario\n                \n            \n        \n        \n    \n\n\n\n\n\n\n\n\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Registrate!            Formulario de Registro                                            Nombres                                                        El nombre es obligatorio.                                                            Apellidos                                                        El apellido es obligatorio.                                                            Nombre de Usuario                                                        El nombre de usuario es obligatorio.                                                            Email                                                        El correo es obligatorio.                                                            Contraseña                                                        La contraseña es obligatoria.                                                            Repite Contraseña                                                    La contraseña es obligatoria.                                                        Fecha de Nacimiento                                                    La fecha de nacimiento es obligatoria.                                                        Dirección de despacho(Opcional)                                                        Calle                                                        Numeracion                                                        Comuna                                    ...                    Santiago                                                                            Registrar                                                    Limpiar Formulario                                                        '\n    var COMPONENTS = [{'name': 'AdmProductsComponent', 'selector': 'app-adm-products'},{'name': 'AdmUsersComponent', 'selector': 'app-adm-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol.html":{"url":"interfaces/Rol.html","title":"interface - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/rol.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Rol {\n    id: number;\n    descripcion: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            calle\n                                        \n                                \n                                \n                                        \n                                            comuna\n                                        \n                                \n                                \n                                        \n                                            correo\n                                        \n                                \n                                \n                                        \n                                            fecha_nac\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            numeracion\n                                        \n                                \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comuna\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comuna:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        correo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_nac\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_nac:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numeracion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numeracion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         Rol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rol\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Rol } from \"./rol\";\n\nexport interface User {\n    id          :number;\n    nombres     :string; \n    apellidos   :string;\n    correo      :string; \n    rol         :Rol;\n    username    :string;\n    pass        :string;\n    fecha_nac   :string;\n    calle       :string;\n    numeracion  :string;\n    comuna      :string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserServiceService.html":{"url":"injectables/UserServiceService.html","title":"injectable - UserServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user/user-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                rolLog\n                            \n                            \n                                    Public\n                                userLog\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                getRolById\n                            \n                            \n                                getRoles\n                            \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUserByUsername\n                            \n                            \n                                getUserLog\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setUserBlank\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user/user-service.service.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRolById\n                        \n                    \n                \n            \n            \n                \ngetRolById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Rol[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(correo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                correo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByUsername\n                        \n                    \n                \n            \n            \n                \ngetUserByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserLog\n                        \n                    \n                \n            \n            \n                \ngetUserLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserBlank\n                        \n                    \n                \n            \n            \n                \nsetUserBlank()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(username: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(n_user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/user/user-service.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n_user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, descripcion: 'Administrador' },\n    { id: 2, descripcion: 'Usuario' },\n    { id: 3, descripcion: 'Cliente' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user/user-service.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rolLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    descripcion:'',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user/user-service.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rolLog,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user/user-service.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { \n      id: 1, \n      nombres: 'Pablo', \n      apellidos:'Garrido Cid',\n      correo: 'pa.garrido.cid@gmail.com', \n      rol: this.roles[0],\n      username:'admin',\n      pass:'Pass1010!',\n      calle:'',\n      numeracion:'',\n      comuna:'',\n      fecha_nac:'1995-05-06'\n    },\n    { \n      id: 2, \n      nombres: 'Javier', \n      apellidos:'Gonzalez',\n      correo: 'javier@gmail.com', \n      rol: this.roles[1],\n      username:'javiercito',\n      pass:'Pass1010!',\n      calle:'',\n      numeracion:'',\n      comuna:'',\n      fecha_nac:'1995-05-05'\n    },\n    { \n      id: 3, \n      nombres: 'Paulina', \n      apellidos:'Pinto',\n      correo: 'pauli@gmail.com', \n      rol: this.roles[2],\n      username:'pauli',\n      pass:'Pass1010!',\n      calle:'av el manzano',\n      numeracion:'56555',\n      comuna:'Las condes',\n      fecha_nac:'1995-05-06'\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/service/user/user-service.service.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { User } from '../../model/user';\nimport { Rol } from '../../model/rol';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n  \n  private rolLog:Rol = {\n    id:0,\n    descripcion:'',\n  }\n\n  public userLog : User = {\n    id:0,\n    nombres:'',\n    apellidos:'',\n    username:'',\n    rol:this.rolLog,\n    pass:'',\n    calle:'',\n    numeracion:'',\n    correo:'',\n    fecha_nac:'',\n    comuna:''\n\n  };\n  private roles: Rol[] = [\n    { id: 1, descripcion: 'Administrador' },\n    { id: 2, descripcion: 'Usuario' },\n    { id: 3, descripcion: 'Cliente' }\n  ];\n\n  private users: User[] = [\n    { \n      id: 1, \n      nombres: 'Pablo', \n      apellidos:'Garrido Cid',\n      correo: 'pa.garrido.cid@gmail.com', \n      rol: this.roles[0],\n      username:'admin',\n      pass:'Pass1010!',\n      calle:'',\n      numeracion:'',\n      comuna:'',\n      fecha_nac:'1995-05-06'\n    },\n    { \n      id: 2, \n      nombres: 'Javier', \n      apellidos:'Gonzalez',\n      correo: 'javier@gmail.com', \n      rol: this.roles[1],\n      username:'javiercito',\n      pass:'Pass1010!',\n      calle:'',\n      numeracion:'',\n      comuna:'',\n      fecha_nac:'1995-05-05'\n    },\n    { \n      id: 3, \n      nombres: 'Paulina', \n      apellidos:'Pinto',\n      correo: 'pauli@gmail.com', \n      rol: this.roles[2],\n      username:'pauli',\n      pass:'Pass1010!',\n      calle:'av el manzano',\n      numeracion:'56555',\n      comuna:'Las condes',\n      fecha_nac:'1995-05-06'\n    },\n  ];\n\n\n  constructor(private router: Router) {\n    \n  }\n  updatePassword(username: string, newPassword: string): boolean {\n    const userIndex = this.users.findIndex(user => user.username === username);\n    if (userIndex !== -1) {\n      this.users[userIndex].pass = newPassword;\n      return true;\n    }\n    return false;\n  }\n\n  getUserByUsername(username:string):User| null{\n    const user = this.users.find(user=> user.username === username);\n    if(user){\n      return user\n    }\n    return null;\n\n  }\n  getUserByEmail(correo:string){\n    const user = this.users.find(user=> user.correo === correo);\n    if(user){\n      return user\n    }\n    return null;\n  }\n\n  getRolById(id:number){\n    let rol = this.roles.find(rol => rol.id === id);\n    if(rol){\n      return rol\n    }\n    return null\n  }\n\n  getUsers(): User[] {\n    return this.users;\n  }\n\n  addUser(user: User): void {\n    this.users.push(user);\n  }\n\n  getUserById(id: number): User | undefined {\n    return this.users.find(user => user.id === id);\n  }\n\n  getRoles(): Rol[] {\n    return this.roles;\n  }\n\n  getUserLog():User{\n    return this.userLog;\n  }\n\n  setUserBlank(){\n    this.userLog = {\n      id:0,\n      nombres:'',\n      apellidos:'',\n      username:'',\n      rol:this.rolLog,\n      pass:'',\n      calle:'',\n      numeracion:'',\n      correo:'',\n      fecha_nac:'',\n      comuna:''\n  \n    }\n  }\n  login(username: string, password: string): User | undefined {\n    const foundUser = this.users.find(user => user.username === username && user.pass === password);\n    if (foundUser) {\n      this.userLog = foundUser;\n      return foundUser;\n    }\n    return undefined; \n  }\n  updateUser(n_user: User): User | undefined {\n\n    const userIndex = this.users.findIndex(user => user.username === n_user.username);\n\n    if (userIndex !== -1) {\n    \n      this.users[userIndex].nombres   = n_user.nombres;\n      this.users[userIndex].apellidos = n_user.apellidos;\n      this.users[userIndex].username  = n_user.username;\n      // this.users[userIndex].rol       = n_user.rol;\n      this.users[userIndex].pass      = n_user.pass;\n      this.users[userIndex].calle     = n_user.calle;\n      this.users[userIndex].numeracion = n_user.numeracion;\n      this.users[userIndex].correo    = n_user.correo;\n      this.users[userIndex].fecha_nac = n_user.fecha_nac;\n      this.users[userIndex].comuna    = n_user.comuna;\n\n      let user = this.users[userIndex];\n      return user;\n    }\n    return undefined;\n  }\n  logout(){\n    this.setUserBlank();\n    this.router.navigate(['/login'])\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/adm-products/adm-products.component.ts\n            \n            component\n            AdmProductsComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/components/adm-products/adm-products.component.ts\n            \n            function\n            formatNumberToCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/adm-users/adm-users.component.ts\n            \n            component\n            AdmUsersComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            function\n            formatNumberToCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/products/products.component.ts\n            \n            function\n            formatNumberToCurrency\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/model/cart.ts\n            \n            interface\n            Cart\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/product.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/model/rol.ts\n            \n            interface\n            Rol\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/service/product/product-service.service.ts\n            \n            injectable\n            ProductServiceService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/service/user/user-service.service.ts\n            \n            injectable\n            UserServiceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            formatNumberToCurrency   (src/.../adm-products.component.ts)\n                        \n                        \n                            formatNumberToCurrency   (src/.../cart.component.ts)\n                        \n                        \n                            formatNumberToCurrency   (src/.../products.component.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/app/components/adm-products/adm-products.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n            \n                \nformatNumberToCurrency(number: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/components/cart/cart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n            \n                \nformatNumberToCurrency(number: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/components/products/products.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatNumberToCurrency\n                        \n                    \n                \n            \n            \n                \nformatNumberToCurrency(number: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTiendaFront\nThis project was generated with Angular CLI version 18.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
